{"version":3,"file":"src_app_pages_external-vacancies_external-vacancies_module_ts.js","mappings":"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","sources":["./src/@vex/animations/stagger.animation.ts","./src/app/pages/external-vacancies/external-vacancies-routing.module.ts","./src/app/pages/external-vacancies/external-vacancies.component.ts","./src/app/pages/external-vacancies/external-vacancies.component.html","./src/app/pages/external-vacancies/external-vacancies.module.ts"],"sourcesContent":["import { animateChild, query, stagger, transition, trigger } from '@angular/animations';\n\nexport function staggerAnimation(timing: number) {\n  return trigger('stagger', [\n    transition('* => *', [ // each time the binding value changes\n      query(':enter', stagger(timing, animateChild()), { optional: true }),\n    ])\n  ]);\n}\n\nexport const stagger80ms = staggerAnimation(80);\nexport const stagger60ms = staggerAnimation(60);\nexport const stagger40ms = staggerAnimation(40);\nexport const stagger20ms = staggerAnimation(20);\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { QuicklinkModule } from 'ngx-quicklink';\nimport { ExternalVacanciesComponent } from './external-vacancies.component';\n\n\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ExternalVacanciesComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule, QuicklinkModule]\n})\nexport class ExternalVacanciesRoutingModule {\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { fadeInUp400ms } from 'src/@vex/animations/fade-in-up.animation';\nimport { stagger60ms } from 'src/@vex/animations/stagger.animation';\nimport { VacancyService } from 'src/app/services/vacancy.service';\nimport { EditVacancyComponent } from './edit-vacancy/edit-vacancy.component';\nimport { List, Vacancy } from '../model/vacancy';\n\nimport { VacancyFormComponent } from './vacancy-form/vacancy-form.component';\nimport { ViewVacancyComponent } from './view-vacancy/view-vacancy.component';\n\n\n@Component({\n  selector: 'vex-external-vacancies',\n  templateUrl: './external-vacancies.component.html',\n  styleUrls: ['./external-vacancies.component.scss', './external-vacancies.component.css'],\n  animations: [\n    stagger60ms,\n    fadeInUp400ms\n  ]\n})\nexport class ExternalVacanciesComponent implements OnInit, AfterViewInit {\n  // [x: string]: any;\n\n  selectedRow;\n  // @ViewChild(MatTable) table!: MatTable<List>;\n  dataSource!: MatTableDataSource<any>;\n\n  @ViewChild('paginator') paginator!: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  data: Vacancy[]\n  public editVacancy: List;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'company', 'vacancyName', 'vacancyAddress', 'deadLine',\n    'category', 'type', 'probationaryPeriod', 'schedule', 'status'];\n  groupedColumns: string[] = ['grouped'];\n  secondGroupedColumns: string[] = ['options'];\n  thirdGroupedColumns: string[] = ['edit'];\n  highlightedRows: any;\n\n\n  constructor(private dialogRef: MatDialog,\n    private vacancyService: VacancyService,\n    private router: Router\n  ) {\n    // this.dataSource = new VacancyTableDataSource();\n\n\n\n  }\n\n\n\n  ngOnInit() {\n    this.getAllVacancies();\n    // this.getAllNewVacancies(0, 80);\n    // this.getAllActiveVacancies(0, 80);\n    // this.getAllCancelledVacancies(0, 80);\n    // this.getAllCompletedVacancies(0, 80);\n    // this.getAllStoppedVacancies(0, 80);\n\n\n\n  }\n\n\n  //get all vacancies\n  public getAllVacancies(): void {\n    this.vacancyService.getAllVacancies().subscribe(x => {\n      this.dataSource = new MatTableDataSource(this.data = x['list']);\n      // this.data = x['list'];\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      console.log(this.data);\n    },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n\n    )\n  }\n\n  public cancelVacancy(rowData): void {\n    rowData = this.selectedRow;\n    this.vacancyService.cancelVacancy(rowData).subscribe((result) => {\n      console.log(result)\n    })\n    setTimeout(() => {\n      window.location.reload();\n    }, 2);\n  }\n\n  public duplicateVacancy(rowData): void {\n    rowData = this.selectedRow;\n    this.vacancyService.duplicateVacancy(rowData).subscribe((result) => {\n      console.log(result)\n    })\n    setTimeout(() => {\n      window.location.reload();\n    }, 2);\n  }\n\n\n  public activeVacancy(rowData): void {\n    rowData = this.selectedRow;\n    this.vacancyService.activeVacancy(rowData).subscribe((result) => {\n      console.log(result)\n    })\n    setTimeout(() => {\n      window.location.reload();\n    }, 2);\n\n  }\n\n  public deleteVacancy(rowData): void {\n    rowData = this.selectedRow;\n    this.vacancyService.deleteVacancy(rowData).subscribe((result) => {\n      console.log(result)\n    })\n    setTimeout(() => {\n      window.location.reload();\n    }, 2);\n\n  }\n\n\n  //get all new vacancies\n  // public getAllNewVacancies(start: number, limit: number): void {\n  //   this.vacancyService.getAllNewVacancies(start, limit).subscribe(x => {\n  //     this.dataSource = new MatTableDataSource(this.data = x['list']);\n\n  //     console.log(this.data);\n  //   }),\n  //     (error: HttpErrorResponse) => {\n  //       alert(error.message);\n  //     }\n\n\n\n\n  // }\n\n  // get all active vacancies \n\n  // public getAllActiveVacancies(start: number, limit: number): void {\n  //   this.vacancyService.getAllActiveVacancies(start, limit).subscribe(a => {\n  //     this.dataSource = new MatTableDataSource(this.data = a['list']);\n  //     this.dataSource.sort = this.sort;\n  //     this.dataSource.paginator = this.paginator;\n\n  //     console.log(this.data);\n  //   }),\n  //     (error: HttpErrorResponse) => {\n  //       alert(error.message);\n  //     }\n  // }\n\n  //get all cancelled vacancies\n  // public getAllCancelledVacancies(start: number, limit: number): void {\n  //   this.vacancyService.getAllCancelledVacancies(start, limit).subscribe(c => {\n  //     this.dataSource = new MatTableDataSource(this.data = c['list']);\n\n\n  //     console.log(this.data);\n  //   }),\n  //     (error: HttpErrorResponse) => {\n  //       alert(error.message);\n  //     }\n  // }\n\n\n  // public getAllCompletedVacancies(start: number, limit: number): void {\n  //   this.vacancyService.getAllCompletedVacancies(start, limit).subscribe(c => {\n  //     this.dataSource = new MatTableDataSource(this.data = c['list']);\n\n\n  //     console.log(this.data);\n  //   }),\n  //     (error: HttpErrorResponse) => {\n  //       alert(error.message);\n  //     }\n  // }\n\n\n  // public getAllStoppedVacancies(start: number, limit: number): void {\n  //   this.vacancyService.getAllStoppedVacancies(start, limit).subscribe(c => {\n\n  //     this.dataSource = new MatTableDataSource(this.data = c['list']);\n\n\n\n  //     console.log(this.data);\n\n  //   }),\n  //     (error: HttpErrorResponse) => {\n  //       alert(error.message);\n  //     }\n  // }\n\n\n  refreshButton() {\n    setTimeout(() => {\n      window.location.reload();\n    }, 2);\n  }\n\n  openDialog() {\n    this.dialogRef.open(VacancyFormComponent, {\n      disableClose: true,\n      height: '950px',\n      width: '1200px'\n    });\n  }\n\n\n  // editData;\n  // editButtonClick(vacancyId: number) {\n  //   this.router.navigate(['/vacancy', vacancyId]);\n  //   this.editData = this.selectedRow\n\n  // }\n\n\n  ngAfterViewInit(): void {\n    // this.dataSource.sort = this.sort;\n    // this.dataSource.paginator = this.paginator;\n    // this.table.dataSource = this.dataSource;\n  }\n  filterData($event: any) {\n    this.dataSource.filter = $event.target.value;\n  }\n\n\n  selectedRowIndex = -1;\n  highlight(vacancy) {\n    this.selectedRow = vacancy;\n    this.selectedRowIndex = vacancy.id;\n    console.log(vacancy);\n\n\n\n  }\n\n\n\n  editDialog() {\n\n\n\n    this.dialogRef.open(EditVacancyComponent, {\n      // disableClose: true,\n      height: '950px',\n      width: '100%',\n      data: this.selectedRow\n\n    })\n\n    // console.log(rowData)\n\n  }\n\n  viewDialog(rowData) {\n\n    rowData = this.selectedRow\n\n    this.dialogRef.open(ViewVacancyComponent, {\n      // disableClose: true,\n      height: '1400px',\n      width: '1400px',\n      data: this.selectedRow\n\n    })\n\n    console.log(rowData)\n\n  }\n\n\n  goToLinks(url: string) {\n    window.open(url, \"_blank\");\n  }\n}\n\n","<table mat-table class=\" mat-elevation-z8 \" [dataSource]=\"dataSource\" matSort matSortActive=\"id\" matSortDirection=\"desc\"\r\n  cdkDropListGroup>\r\n\r\n\r\n  <ng-container matColumnDef=\"grouped\">\r\n    <th mat-header-cell *matHeaderCellDef colspan=\"10\"> <button class=\"button-7\" role=\"button\" (click)=\"openDialog()\">\r\n        <mat-icon [ngStyle]=\" {'color':'rgb(132, 139, 238)'}\">assignment</mat-icon>\r\n        New Vacancy\r\n      </button>\r\n    </th>\r\n  </ng-container>\r\n\r\n\r\n\r\n  <ng-container matColumnDef=\"options\">\r\n    <th mat-header-cell *matHeaderCellDef colspan=\"10\">\r\n      <div class=\"buttonDisplay\">\r\n        <span> <button class=\"button-7\" role=\"button\" (click)=\"getAllVacancies()\">ALL</button></span>\r\n        <span> <button class=\"button-7\" role=\"button\" [routerLink]=\"['/pages/newVacancies']\">New</button></span>\r\n        <span> <button class=\"button-7\" role=\"button\" [routerLink]=\"['/pages/activeVacancies']\">Active</button></span>\r\n        <span> <button class=\"button-7\" role=\"button\"\r\n            [routerLink]=\"['/pages/cancelledVacancies']\">Cancelled</button></span>\r\n        <span> <button class=\"button-7\" role=\"button\"\r\n            [routerLink]=\"['/pages/completedVacancies']\">Completed</button></span>\r\n        <span> <button class=\"button-7\" role=\"button\" [routerLink]=\"['/pages/stoppedVacancies']\">Stopped</button></span>\r\n        <span>\r\n          <mat-form-field appearance=\"outline\" class=\"filterClass\">\r\n            <input matInput placeholder=\"search\" autocomplete=\"off\" (keyup)=\"filterData($event)\">\r\n          </mat-form-field>\r\n        </span>\r\n      </div>\r\n\r\n\r\n    </th>\r\n\r\n  </ng-container>\r\n\r\n\r\n\r\n\r\n  <ng-container matColumnDef=\"edit\">\r\n\r\n    <th mat-header-cell *matHeaderCellDef colspan=\"10\">\r\n      <div class=\"buttonDisplay\">\r\n        <span> <button class=\"button-2\" role=\"button\" (click)=\"refreshButton()\">\r\n            <mat-icon>cached</mat-icon> Refresh\r\n          </button></span>\r\n        <span> <button class=\"button-2\" role=\"button\" (click)=\"editDialog()\">\r\n            <mat-icon>edit</mat-icon> Edit Vacancy\r\n          </button></span>\r\n        <span> <button class=\"button-2\" role=\"button\" (click)=\"viewDialog(data)\">\r\n            <mat-icon>remove_red_eye</mat-icon> View Vacancy\r\n          </button></span>\r\n        <span> <button class=\"button-2\" role=\"button\" (click)=\"activeVacancy(data)\">\r\n            <mat-icon>send</mat-icon> Active Vacancy\r\n          </button></span>\r\n        <span> <button class=\"button-2\" role=\"button\" (click)=\"cancelVacancy(data)\">\r\n            <mat-icon>cancel</mat-icon>Cancel Vacancy\r\n          </button></span>\r\n        <span> <button class=\"button-2\" role=\"button\" (click)=\"deleteVacancy(data)\">\r\n            <mat-icon>delete_forever</mat-icon> Delete Vacancy\r\n          </button></span>\r\n        <span> <button class=\"button-2\" role=\"button\" (click)=\"duplicateVacancy(data)\">\r\n            <mat-icon>file_copy</mat-icon> Duplicate Vacancy\r\n          </button></span>\r\n\r\n      </div>\r\n    </th>\r\n  </ng-container>\r\n\r\n\r\n\r\n\r\n  <ng-container matColumnDef=\"id\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"body\">\r\n      ID\r\n    </th>\r\n    <td mat-cell *matCellDef=\" let vacancy\">{{vacancy?.id}}\r\n\r\n\r\n    </td>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"company\">\r\n    <th mat-header-cell *matHeaderCellDef class=\"body\" mat-sort-header>\r\n      Company</th>\r\n    <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.companyName}}</td>\r\n  </ng-container>\r\n\r\n\r\n  <ng-container matColumnDef=\"vacancyName\">\r\n    <th mat-header-cell *matHeaderCellDef class=\"body\" mat-sort-header>\r\n      Vacancy Title </th>\r\n    <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.vacancyName}}</td>\r\n  </ng-container>\r\n\r\n\r\n  <!-- <ng-container matColumnDef=\"title\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"body\">\r\n      Title</th>\r\n    <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.title}}</td>\r\n  </ng-container> -->\r\n\r\n\r\n  <ng-container matColumnDef=\"vacancyAddress\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"body\">Location</th>\r\n    <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.vacancyAddress}}</td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"deadLine\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"body\">Dead Line</th>\r\n    <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.deadLine}}</td>\r\n  </ng-container>\r\n\r\n\r\n  <ng-container matColumnDef=\"category\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"body\">Category</th>\r\n    <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.categoryName}}</td>\r\n  </ng-container>\r\n\r\n\r\n\r\n  <!-- <ng-container matColumnDef=\"description\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"body\">Description</th>\r\n    <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.description}}</td>\r\n  </ng-container> -->\r\n\r\n  <ng-container matColumnDef=\"type\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\" body\">Type</th>\r\n    <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.typeName}}</td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"probationaryPeriod\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\" body\">Probationary Period</th>\r\n    <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.probationaryPeriod}}</td>\r\n  </ng-container>\r\n\r\n\r\n\r\n\r\n  <ng-container matColumnDef=\"schedule\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\" body\">Schedule</th>\r\n    <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.schedule}}</td>\r\n  </ng-container>\r\n\r\n\r\n  <ng-container matColumnDef=\"status\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\" body\">Status</th>\r\n    <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.status}}\r\n\r\n\r\n    </td>\r\n  </ng-container>\r\n\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"groupedColumns; sticky: true\"></tr>\r\n  <tr mat-header-row *matHeaderRowDef=\"secondGroupedColumns; sticky: true\"></tr>\r\n  <tr mat-header-row *matHeaderRowDef=\"thirdGroupedColumns; sticky: true\"></tr>\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let vacancy; columns: displayedColumns;\"\r\n    [ngClass]=\"{'highlighted': selectedRowIndex == vacancy.id}\" (click)=\"highlight(vacancy)\" class=\"mat-row\"></tr>\r\n\r\n</table>\r\n\r\n<mat-paginator class=\"full-width-table body\" #paginator [pageSize]=\"10\" [pageSizeOptions]=\"[10,20,30,50,100]\"\r\n  aria-label=\"Select page\">\r\n</mat-paginator>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ExternalVacanciesComponent } from './external-vacancies.component';\nimport { ExternalVacanciesRoutingModule } from './external-vacancies-routing.module';\n\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { VacancyFormModule } from './vacancy-form/vacancy-form.module';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { VacancyService } from 'src/app/services/vacancy.service';\nimport {\n    ResizableModule\n} from 'angular-resizable-element';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { MatTabGroup, MatTabsModule } from '@angular/material/tabs';\nimport { ViewVacancyComponent } from './view-vacancy/view-vacancy.component';\n\n\n\n@NgModule({\n    declarations: [ExternalVacanciesComponent],\n    imports: [\n\n\n        CommonModule,\n        ExternalVacanciesRoutingModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatIconModule,\n        MatButtonModule,\n        MatDialogModule,\n        HttpClientModule,\n        MatDatepickerModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n\n        MatInputModule,\n        MatIconModule,\n        MatButtonModule,\n\n        MatSelectModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n\n        MatAutocompleteModule,\n        MatSliderModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatSlideToggleModule,\n\n        MatCardModule,\n        VacancyFormModule,\n\n        ResizableModule,\n\n        CdkTableModule,\n        ScrollingModule,\n        A11yModule,\n        MatTabsModule,\n\n\n    ],\n\n    providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }, VacancyService]\n})\nexport class ExternalVacanciesModule {\n}\n"],"names":[],"sourceRoot":"webpack:///"}