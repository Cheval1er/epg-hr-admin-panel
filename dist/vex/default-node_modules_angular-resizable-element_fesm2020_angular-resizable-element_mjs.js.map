{"version":3,"file":"default-node_modules_angular-resizable-element_fesm2020_angular-resizable-element_mjs.js","mappings":"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","sources":["./node_modules/angular-resizable-element/fesm2020/angular-resizable-element.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Directive, Inject, Input, Output, Optional, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Subject, merge, Observable, fromEvent } from 'rxjs';\nimport { tap, share, mergeMap, take, map, pairwise, filter, takeUntil } from 'rxjs/operators';\n\n/**\n * @hidden\n */\nconst IS_TOUCH_DEVICE = (() => {\n    // In case we're in Node.js environment.\n    if (typeof window === 'undefined') {\n        return false;\n    }\n    else {\n        return ('ontouchstart' in window ||\n            navigator.maxTouchPoints > 0 ||\n            navigator.msMaxTouchPoints >\n                0);\n    }\n})();\n\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    descendantsWithId.forEach((descendant) => {\n        descendant.removeAttribute('id');\n    });\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    // Browsers throw an error when assigning the value of a file input programmatically.\n    if (clone.type !== 'file') {\n        clone.value = source.value;\n    }\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch { }\n    }\n}\n\nfunction getNewBoundingRectangle(startingRect, edges, clientX, clientY) {\n    const newBoundingRect = {\n        top: startingRect.top,\n        bottom: startingRect.bottom,\n        left: startingRect.left,\n        right: startingRect.right,\n    };\n    if (edges.top) {\n        newBoundingRect.top += clientY;\n    }\n    if (edges.bottom) {\n        newBoundingRect.bottom += clientY;\n    }\n    if (edges.left) {\n        newBoundingRect.left += clientX;\n    }\n    if (edges.right) {\n        newBoundingRect.right += clientX;\n    }\n    newBoundingRect.height = newBoundingRect.bottom - newBoundingRect.top;\n    newBoundingRect.width = newBoundingRect.right - newBoundingRect.left;\n    return newBoundingRect;\n}\nfunction getElementRect(element, ghostElementPositioning) {\n    let translateX = 0;\n    let translateY = 0;\n    const style = element.nativeElement.style;\n    const transformProperties = [\n        'transform',\n        '-ms-transform',\n        '-moz-transform',\n        '-o-transform',\n    ];\n    const transform = transformProperties\n        .map((property) => style[property])\n        .find((value) => !!value);\n    if (transform && transform.includes('translate')) {\n        translateX = transform.replace(/.*translate3?d?\\((-?[0-9]*)px, (-?[0-9]*)px.*/, '$1');\n        translateY = transform.replace(/.*translate3?d?\\((-?[0-9]*)px, (-?[0-9]*)px.*/, '$2');\n    }\n    if (ghostElementPositioning === 'absolute') {\n        return {\n            height: element.nativeElement.offsetHeight,\n            width: element.nativeElement.offsetWidth,\n            top: element.nativeElement.offsetTop - translateY,\n            bottom: element.nativeElement.offsetHeight +\n                element.nativeElement.offsetTop -\n                translateY,\n            left: element.nativeElement.offsetLeft - translateX,\n            right: element.nativeElement.offsetWidth +\n                element.nativeElement.offsetLeft -\n                translateX,\n        };\n    }\n    else {\n        const boundingRect = element.nativeElement.getBoundingClientRect();\n        return {\n            height: boundingRect.height,\n            width: boundingRect.width,\n            top: boundingRect.top - translateY,\n            bottom: boundingRect.bottom - translateY,\n            left: boundingRect.left - translateX,\n            right: boundingRect.right - translateX,\n            scrollTop: element.nativeElement.scrollTop,\n            scrollLeft: element.nativeElement.scrollLeft,\n        };\n    }\n}\nconst DEFAULT_RESIZE_CURSORS = Object.freeze({\n    topLeft: 'nw-resize',\n    topRight: 'ne-resize',\n    bottomLeft: 'sw-resize',\n    bottomRight: 'se-resize',\n    leftOrRight: 'col-resize',\n    topOrBottom: 'row-resize',\n});\nfunction getResizeCursor(edges, cursors) {\n    if (edges.left && edges.top) {\n        return cursors.topLeft;\n    }\n    else if (edges.right && edges.top) {\n        return cursors.topRight;\n    }\n    else if (edges.left && edges.bottom) {\n        return cursors.bottomLeft;\n    }\n    else if (edges.right && edges.bottom) {\n        return cursors.bottomRight;\n    }\n    else if (edges.left || edges.right) {\n        return cursors.leftOrRight;\n    }\n    else if (edges.top || edges.bottom) {\n        return cursors.topOrBottom;\n    }\n    else {\n        return '';\n    }\n}\nfunction getEdgesDiff({ edges, initialRectangle, newRectangle, }) {\n    const edgesDiff = {};\n    Object.keys(edges).forEach((edge) => {\n        edgesDiff[edge] = (newRectangle[edge] || 0) - (initialRectangle[edge] || 0);\n    });\n    return edgesDiff;\n}\nconst RESIZE_ACTIVE_CLASS = 'resize-active';\nconst RESIZE_GHOST_ELEMENT_CLASS = 'resize-ghost-element';\nconst MOUSE_MOVE_THROTTLE_MS = 50;\n/**\n * Place this on an element to make it resizable. For example:\n *\n * ```html\n * <div\n *   mwlResizable\n *   [resizeEdges]=\"{bottom: true, right: true, top: true, left: true}\"\n *   [enableGhostResize]=\"true\">\n * </div>\n * ```\n * Or in case they are sibling elements:\n * ```html\n * <div mwlResizable #resizableElement=\"mwlResizable\"></div>\n * <div mwlResizeHandle [resizableContainer]=\"resizableElement\" [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * ```\n */\nclass ResizableDirective {\n    /**\n     * @hidden\n     */\n    constructor(platformId, renderer, elm, zone) {\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.elm = elm;\n        this.zone = zone;\n        /**\n         * Set to `true` to enable a temporary resizing effect of the element in between the `resizeStart` and `resizeEnd` events.\n         */\n        this.enableGhostResize = false;\n        /**\n         * A snap grid that resize events will be locked to.\n         *\n         * e.g. to only allow the element to be resized every 10px set it to `{left: 10, right: 10}`\n         */\n        this.resizeSnapGrid = {};\n        /**\n         * The mouse cursors that will be set on the resize edges\n         */\n        this.resizeCursors = DEFAULT_RESIZE_CURSORS;\n        /**\n         * Define the positioning of the ghost element (can be fixed or absolute)\n         */\n        this.ghostElementPositioning = 'fixed';\n        /**\n         * Allow elements to be resized to negative dimensions\n         */\n        this.allowNegativeResizes = false;\n        /**\n         * The mouse move throttle in milliseconds, default: 50 ms\n         */\n        this.mouseMoveThrottleMS = MOUSE_MOVE_THROTTLE_MS;\n        /**\n         * Called when the mouse is pressed and a resize event is about to begin. `$event` is a `ResizeEvent` object.\n         */\n        this.resizeStart = new EventEmitter();\n        /**\n         * Called as the mouse is dragged after a resize event has begun. `$event` is a `ResizeEvent` object.\n         */\n        this.resizing = new EventEmitter();\n        /**\n         * Called after the mouse is released after a resize event. `$event` is a `ResizeEvent` object.\n         */\n        this.resizeEnd = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.mouseup = new Subject();\n        /**\n         * @hidden\n         */\n        this.mousedown = new Subject();\n        /**\n         * @hidden\n         */\n        this.mousemove = new Subject();\n        this.destroy$ = new Subject();\n        this.pointerEventListeners = PointerEventListeners.getInstance(renderer, zone);\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        const mousedown$ = merge(this.pointerEventListeners.pointerDown, this.mousedown);\n        const mousemove$ = merge(this.pointerEventListeners.pointerMove, this.mousemove).pipe(tap(({ event }) => {\n            if (currentResize) {\n                try {\n                    event.preventDefault();\n                }\n                catch (e) {\n                    // just adding try-catch not to see errors in console if there is a passive listener for same event somewhere\n                    // browser does nothing except of writing errors to console\n                }\n            }\n        }), share());\n        const mouseup$ = merge(this.pointerEventListeners.pointerUp, this.mouseup);\n        let currentResize;\n        const removeGhostElement = () => {\n            if (currentResize && currentResize.clonedNode) {\n                this.elm.nativeElement.parentElement.removeChild(currentResize.clonedNode);\n                this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'inherit');\n            }\n        };\n        const getResizeCursors = () => {\n            return {\n                ...DEFAULT_RESIZE_CURSORS,\n                ...this.resizeCursors,\n            };\n        };\n        const mousedrag = mousedown$\n            .pipe(mergeMap((startCoords) => {\n            function getDiff(moveCoords) {\n                return {\n                    clientX: moveCoords.clientX - startCoords.clientX,\n                    clientY: moveCoords.clientY - startCoords.clientY,\n                };\n            }\n            const getSnapGrid = () => {\n                const snapGrid = { x: 1, y: 1 };\n                if (currentResize) {\n                    if (this.resizeSnapGrid.left && currentResize.edges.left) {\n                        snapGrid.x = +this.resizeSnapGrid.left;\n                    }\n                    else if (this.resizeSnapGrid.right &&\n                        currentResize.edges.right) {\n                        snapGrid.x = +this.resizeSnapGrid.right;\n                    }\n                    if (this.resizeSnapGrid.top && currentResize.edges.top) {\n                        snapGrid.y = +this.resizeSnapGrid.top;\n                    }\n                    else if (this.resizeSnapGrid.bottom &&\n                        currentResize.edges.bottom) {\n                        snapGrid.y = +this.resizeSnapGrid.bottom;\n                    }\n                }\n                return snapGrid;\n            };\n            function getGrid(coords, snapGrid) {\n                return {\n                    x: Math.ceil(coords.clientX / snapGrid.x),\n                    y: Math.ceil(coords.clientY / snapGrid.y),\n                };\n            }\n            return merge(mousemove$.pipe(take(1)).pipe(map((coords) => [, coords])), mousemove$.pipe(pairwise()))\n                .pipe(map(([previousCoords, newCoords]) => {\n                return [\n                    previousCoords ? getDiff(previousCoords) : previousCoords,\n                    getDiff(newCoords),\n                ];\n            }))\n                .pipe(filter(([previousCoords, newCoords]) => {\n                if (!previousCoords) {\n                    return true;\n                }\n                const snapGrid = getSnapGrid();\n                const previousGrid = getGrid(previousCoords, snapGrid);\n                const newGrid = getGrid(newCoords, snapGrid);\n                return (previousGrid.x !== newGrid.x || previousGrid.y !== newGrid.y);\n            }))\n                .pipe(map(([, newCoords]) => {\n                const snapGrid = getSnapGrid();\n                return {\n                    clientX: Math.round(newCoords.clientX / snapGrid.x) * snapGrid.x,\n                    clientY: Math.round(newCoords.clientY / snapGrid.y) * snapGrid.y,\n                };\n            }))\n                .pipe(takeUntil(merge(mouseup$, mousedown$)));\n        }))\n            .pipe(filter(() => !!currentResize));\n        mousedrag\n            .pipe(map(({ clientX, clientY }) => {\n            return getNewBoundingRectangle(currentResize.startingRect, currentResize.edges, clientX, clientY);\n        }))\n            .pipe(filter((newBoundingRect) => {\n            return (this.allowNegativeResizes ||\n                !!(newBoundingRect.height &&\n                    newBoundingRect.width &&\n                    newBoundingRect.height > 0 &&\n                    newBoundingRect.width > 0));\n        }))\n            .pipe(filter((newBoundingRect) => {\n            return this.validateResize\n                ? this.validateResize({\n                    rectangle: newBoundingRect,\n                    edges: getEdgesDiff({\n                        edges: currentResize.edges,\n                        initialRectangle: currentResize.startingRect,\n                        newRectangle: newBoundingRect,\n                    }),\n                })\n                : true;\n        }), takeUntil(this.destroy$))\n            .subscribe((newBoundingRect) => {\n            if (currentResize && currentResize.clonedNode) {\n                this.renderer.setStyle(currentResize.clonedNode, 'height', `${newBoundingRect.height}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'width', `${newBoundingRect.width}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'top', `${newBoundingRect.top}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'left', `${newBoundingRect.left}px`);\n            }\n            if (this.resizing.observers.length > 0) {\n                this.zone.run(() => {\n                    this.resizing.emit({\n                        edges: getEdgesDiff({\n                            edges: currentResize.edges,\n                            initialRectangle: currentResize.startingRect,\n                            newRectangle: newBoundingRect,\n                        }),\n                        rectangle: newBoundingRect,\n                    });\n                });\n            }\n            currentResize.currentRect = newBoundingRect;\n        });\n        mousedown$\n            .pipe(map(({ edges }) => {\n            return edges || {};\n        }), filter((edges) => {\n            return Object.keys(edges).length > 0;\n        }), takeUntil(this.destroy$))\n            .subscribe((edges) => {\n            if (currentResize) {\n                removeGhostElement();\n            }\n            const startingRect = getElementRect(this.elm, this.ghostElementPositioning);\n            currentResize = {\n                edges,\n                startingRect,\n                currentRect: startingRect,\n            };\n            const resizeCursors = getResizeCursors();\n            const cursor = getResizeCursor(currentResize.edges, resizeCursors);\n            this.renderer.setStyle(document.body, 'cursor', cursor);\n            this.setElementClass(this.elm, RESIZE_ACTIVE_CLASS, true);\n            if (this.enableGhostResize) {\n                currentResize.clonedNode = deepCloneNode(this.elm.nativeElement);\n                this.elm.nativeElement.parentElement.appendChild(currentResize.clonedNode);\n                this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'hidden');\n                this.renderer.setStyle(currentResize.clonedNode, 'position', this.ghostElementPositioning);\n                this.renderer.setStyle(currentResize.clonedNode, 'left', `${currentResize.startingRect.left}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'top', `${currentResize.startingRect.top}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'height', `${currentResize.startingRect.height}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'width', `${currentResize.startingRect.width}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'cursor', getResizeCursor(currentResize.edges, resizeCursors));\n                this.renderer.addClass(currentResize.clonedNode, RESIZE_GHOST_ELEMENT_CLASS);\n                currentResize.clonedNode.scrollTop = currentResize.startingRect\n                    .scrollTop;\n                currentResize.clonedNode.scrollLeft = currentResize.startingRect\n                    .scrollLeft;\n            }\n            if (this.resizeStart.observers.length > 0) {\n                this.zone.run(() => {\n                    this.resizeStart.emit({\n                        edges: getEdgesDiff({\n                            edges,\n                            initialRectangle: startingRect,\n                            newRectangle: startingRect,\n                        }),\n                        rectangle: getNewBoundingRectangle(startingRect, {}, 0, 0),\n                    });\n                });\n            }\n        });\n        mouseup$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            if (currentResize) {\n                this.renderer.removeClass(this.elm.nativeElement, RESIZE_ACTIVE_CLASS);\n                this.renderer.setStyle(document.body, 'cursor', '');\n                this.renderer.setStyle(this.elm.nativeElement, 'cursor', '');\n                if (this.resizeEnd.observers.length > 0) {\n                    this.zone.run(() => {\n                        this.resizeEnd.emit({\n                            edges: getEdgesDiff({\n                                edges: currentResize.edges,\n                                initialRectangle: currentResize.startingRect,\n                                newRectangle: currentResize.currentRect,\n                            }),\n                            rectangle: currentResize.currentRect,\n                        });\n                    });\n                }\n                removeGhostElement();\n                currentResize = null;\n            }\n        });\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        // browser check for angular universal, because it doesn't know what document is\n        if (isPlatformBrowser(this.platformId)) {\n            this.renderer.setStyle(document.body, 'cursor', '');\n        }\n        this.mousedown.complete();\n        this.mouseup.complete();\n        this.mousemove.complete();\n        this.destroy$.next();\n    }\n    setElementClass(elm, name, add) {\n        if (add) {\n            this.renderer.addClass(elm.nativeElement, name);\n        }\n        else {\n            this.renderer.removeClass(elm.nativeElement, name);\n        }\n    }\n}\nResizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.1.0\", ngImport: i0, type: ResizableDirective, deps: [{ token: PLATFORM_ID }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nResizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.1.0\", type: ResizableDirective, selector: \"[mwlResizable]\", inputs: { validateResize: \"validateResize\", enableGhostResize: \"enableGhostResize\", resizeSnapGrid: \"resizeSnapGrid\", resizeCursors: \"resizeCursors\", ghostElementPositioning: \"ghostElementPositioning\", allowNegativeResizes: \"allowNegativeResizes\", mouseMoveThrottleMS: \"mouseMoveThrottleMS\" }, outputs: { resizeStart: \"resizeStart\", resizing: \"resizing\", resizeEnd: \"resizeEnd\" }, exportAs: [\"mwlResizable\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.1.0\", ngImport: i0, type: ResizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mwlResizable]',\n                    exportAs: 'mwlResizable',\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { validateResize: [{\n                type: Input\n            }], enableGhostResize: [{\n                type: Input\n            }], resizeSnapGrid: [{\n                type: Input\n            }], resizeCursors: [{\n                type: Input\n            }], ghostElementPositioning: [{\n                type: Input\n            }], allowNegativeResizes: [{\n                type: Input\n            }], mouseMoveThrottleMS: [{\n                type: Input\n            }], resizeStart: [{\n                type: Output\n            }], resizing: [{\n                type: Output\n            }], resizeEnd: [{\n                type: Output\n            }] } });\nclass PointerEventListeners {\n    constructor(renderer, zone) {\n        this.pointerDown = new Observable((observer) => {\n            let unsubscribeMouseDown;\n            let unsubscribeTouchStart;\n            zone.runOutsideAngular(() => {\n                unsubscribeMouseDown = renderer.listen('document', 'mousedown', (event) => {\n                    observer.next({\n                        clientX: event.clientX,\n                        clientY: event.clientY,\n                        event,\n                    });\n                });\n                if (IS_TOUCH_DEVICE) {\n                    unsubscribeTouchStart = renderer.listen('document', 'touchstart', (event) => {\n                        observer.next({\n                            clientX: event.touches[0].clientX,\n                            clientY: event.touches[0].clientY,\n                            event,\n                        });\n                    });\n                }\n            });\n            return () => {\n                unsubscribeMouseDown();\n                if (IS_TOUCH_DEVICE) {\n                    unsubscribeTouchStart();\n                }\n            };\n        }).pipe(share());\n        this.pointerMove = new Observable((observer) => {\n            let unsubscribeMouseMove;\n            let unsubscribeTouchMove;\n            zone.runOutsideAngular(() => {\n                unsubscribeMouseMove = renderer.listen('document', 'mousemove', (event) => {\n                    observer.next({\n                        clientX: event.clientX,\n                        clientY: event.clientY,\n                        event,\n                    });\n                });\n                if (IS_TOUCH_DEVICE) {\n                    unsubscribeTouchMove = renderer.listen('document', 'touchmove', (event) => {\n                        observer.next({\n                            clientX: event.targetTouches[0].clientX,\n                            clientY: event.targetTouches[0].clientY,\n                            event,\n                        });\n                    });\n                }\n            });\n            return () => {\n                unsubscribeMouseMove();\n                if (IS_TOUCH_DEVICE) {\n                    unsubscribeTouchMove();\n                }\n            };\n        }).pipe(share());\n        this.pointerUp = new Observable((observer) => {\n            let unsubscribeMouseUp;\n            let unsubscribeTouchEnd;\n            let unsubscribeTouchCancel;\n            zone.runOutsideAngular(() => {\n                unsubscribeMouseUp = renderer.listen('document', 'mouseup', (event) => {\n                    observer.next({\n                        clientX: event.clientX,\n                        clientY: event.clientY,\n                        event,\n                    });\n                });\n                if (IS_TOUCH_DEVICE) {\n                    unsubscribeTouchEnd = renderer.listen('document', 'touchend', (event) => {\n                        observer.next({\n                            clientX: event.changedTouches[0].clientX,\n                            clientY: event.changedTouches[0].clientY,\n                            event,\n                        });\n                    });\n                    unsubscribeTouchCancel = renderer.listen('document', 'touchcancel', (event) => {\n                        observer.next({\n                            clientX: event.changedTouches[0].clientX,\n                            clientY: event.changedTouches[0].clientY,\n                            event,\n                        });\n                    });\n                }\n            });\n            return () => {\n                unsubscribeMouseUp();\n                if (IS_TOUCH_DEVICE) {\n                    unsubscribeTouchEnd();\n                    unsubscribeTouchCancel();\n                }\n            };\n        }).pipe(share());\n    }\n    static getInstance(renderer, zone) {\n        if (!PointerEventListeners.instance) {\n            PointerEventListeners.instance = new PointerEventListeners(renderer, zone);\n        }\n        return PointerEventListeners.instance;\n    }\n}\n\n/**\n * An element placed inside a `mwlResizable` directive to be used as a drag and resize handle\n *\n * For example\n *\n * ```html\n * <div mwlResizable>\n *   <div mwlResizeHandle [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * </div>\n * ```\n * Or in case they are sibling elements:\n * ```html\n * <div mwlResizable #resizableElement=\"mwlResizable\"></div>\n * <div mwlResizeHandle [resizableContainer]=\"resizableElement\" [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * ```\n */\nclass ResizeHandleDirective {\n    constructor(renderer, element, zone, resizableDirective) {\n        this.renderer = renderer;\n        this.element = element;\n        this.zone = zone;\n        this.resizableDirective = resizableDirective;\n        /**\n         * The `Edges` object that contains the edges of the parent element that dragging the handle will trigger a resize on\n         */\n        this.resizeEdges = {};\n        this.eventListeners = {};\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        this.zone.runOutsideAngular(() => {\n            this.listenOnTheHost('mousedown').subscribe((event) => {\n                this.onMousedown(event, event.clientX, event.clientY);\n            });\n            this.listenOnTheHost('mouseup').subscribe((event) => {\n                this.onMouseup(event.clientX, event.clientY);\n            });\n            if (IS_TOUCH_DEVICE) {\n                this.listenOnTheHost('touchstart').subscribe((event) => {\n                    this.onMousedown(event, event.touches[0].clientX, event.touches[0].clientY);\n                });\n                merge(this.listenOnTheHost('touchend'), this.listenOnTheHost('touchcancel')).subscribe((event) => {\n                    this.onMouseup(event.changedTouches[0].clientX, event.changedTouches[0].clientY);\n                });\n            }\n        });\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.unsubscribeEventListeners();\n    }\n    /**\n     * @hidden\n     */\n    onMousedown(event, clientX, clientY) {\n        event.preventDefault();\n        if (!this.eventListeners.touchmove) {\n            this.eventListeners.touchmove = this.renderer.listen(this.element.nativeElement, 'touchmove', (touchMoveEvent) => {\n                this.onMousemove(touchMoveEvent, touchMoveEvent.targetTouches[0].clientX, touchMoveEvent.targetTouches[0].clientY);\n            });\n        }\n        if (!this.eventListeners.mousemove) {\n            this.eventListeners.mousemove = this.renderer.listen(this.element.nativeElement, 'mousemove', (mouseMoveEvent) => {\n                this.onMousemove(mouseMoveEvent, mouseMoveEvent.clientX, mouseMoveEvent.clientY);\n            });\n        }\n        this.resizable.mousedown.next({\n            clientX,\n            clientY,\n            edges: this.resizeEdges,\n        });\n    }\n    /**\n     * @hidden\n     */\n    onMouseup(clientX, clientY) {\n        this.unsubscribeEventListeners();\n        this.resizable.mouseup.next({\n            clientX,\n            clientY,\n            edges: this.resizeEdges,\n        });\n    }\n    // directive might be passed from DI or as an input\n    get resizable() {\n        return this.resizableDirective || this.resizableContainer;\n    }\n    onMousemove(event, clientX, clientY) {\n        this.resizable.mousemove.next({\n            clientX,\n            clientY,\n            edges: this.resizeEdges,\n            event,\n        });\n    }\n    unsubscribeEventListeners() {\n        Object.keys(this.eventListeners).forEach((type) => {\n            this.eventListeners[type]();\n            delete this.eventListeners[type];\n        });\n    }\n    listenOnTheHost(eventName) {\n        return fromEvent(this.element.nativeElement, eventName).pipe(takeUntil(this.destroy$));\n    }\n}\nResizeHandleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.1.0\", ngImport: i0, type: ResizeHandleDirective, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: ResizableDirective, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nResizeHandleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.1.0\", type: ResizeHandleDirective, selector: \"[mwlResizeHandle]\", inputs: { resizeEdges: \"resizeEdges\", resizableContainer: \"resizableContainer\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.1.0\", ngImport: i0, type: ResizeHandleDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mwlResizeHandle]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: ResizableDirective, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { resizeEdges: [{\n                type: Input\n            }], resizableContainer: [{\n                type: Input\n            }] } });\n\nclass ResizableModule {\n}\nResizableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.1.0\", ngImport: i0, type: ResizableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nResizableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.1.0\", ngImport: i0, type: ResizableModule, declarations: [ResizableDirective, ResizeHandleDirective], exports: [ResizableDirective, ResizeHandleDirective] });\nResizableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.1.0\", ngImport: i0, type: ResizableModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.1.0\", ngImport: i0, type: ResizableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [ResizableDirective, ResizeHandleDirective],\n                    exports: [ResizableDirective, ResizeHandleDirective],\n                }]\n        }] });\n\n/*\n * Public API Surface of angular-resizable-element\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ResizableDirective, ResizableModule, ResizeHandleDirective };\n"],"names":["i0","EventEmitter","PLATFORM_ID","Directive","Inject","Input","Output","Optional","NgModule","isPlatformBrowser","Subject","merge","Observable","fromEvent","tap","share","mergeMap","take","map","pairwise","filter","takeUntil","IS_TOUCH_DEVICE","window","navigator","maxTouchPoints","msMaxTouchPoints","deepCloneNode","node","clone","cloneNode","descendantsWithId","querySelectorAll","nodeName","toLowerCase","removeAttribute","forEach","descendant","transferCanvasData","transferInputData","transferData","selector","callback","descendantElements","length","cloneElements","i","cloneUniqueId","source","type","value","name","context","getContext","drawImage","getNewBoundingRectangle","startingRect","edges","clientX","clientY","newBoundingRect","top","bottom","left","right","height","width","getElementRect","element","ghostElementPositioning","translateX","translateY","style","nativeElement","transformProperties","transform","property","find","includes","replace","offsetHeight","offsetWidth","offsetTop","offsetLeft","boundingRect","getBoundingClientRect","scrollTop","scrollLeft","DEFAULT_RESIZE_CURSORS","Object","freeze","topLeft","topRight","bottomLeft","bottomRight","leftOrRight","topOrBottom","getResizeCursor","cursors","getEdgesDiff","initialRectangle","newRectangle","edgesDiff","keys","edge","RESIZE_ACTIVE_CLASS","RESIZE_GHOST_ELEMENT_CLASS","MOUSE_MOVE_THROTTLE_MS","ResizableDirective","constructor","platformId","renderer","elm","zone","enableGhostResize","resizeSnapGrid","resizeCursors","allowNegativeResizes","mouseMoveThrottleMS","resizeStart","resizing","resizeEnd","mouseup","mousedown","mousemove","destroy$","pointerEventListeners","PointerEventListeners","getInstance","ngOnInit","mousedown$","pointerDown","mousemove$","pointerMove","pipe","event","currentResize","preventDefault","e","mouseup$","pointerUp","removeGhostElement","clonedNode","parentElement","removeChild","setStyle","getResizeCursors","mousedrag","startCoords","getDiff","moveCoords","getSnapGrid","snapGrid","x","y","getGrid","coords","Math","ceil","previousCoords","newCoords","previousGrid","newGrid","round","validateResize","rectangle","subscribe","observers","run","emit","currentRect","cursor","document","body","setElementClass","appendChild","addClass","removeClass","ngOnDestroy","complete","next","add","ɵfac","Renderer2","ElementRef","NgZone","ɵdir","args","exportAs","undefined","decorators","observer","unsubscribeMouseDown","unsubscribeTouchStart","runOutsideAngular","listen","touches","unsubscribeMouseMove","unsubscribeTouchMove","targetTouches","unsubscribeMouseUp","unsubscribeTouchEnd","unsubscribeTouchCancel","changedTouches","instance","ResizeHandleDirective","resizableDirective","resizeEdges","eventListeners","listenOnTheHost","onMousedown","onMouseup","unsubscribeEventListeners","touchmove","touchMoveEvent","onMousemove","mouseMoveEvent","resizable","resizableContainer","eventName","ResizableModule","ɵmod","ɵinj","declarations","exports"],"sourceRoot":"webpack:///"}