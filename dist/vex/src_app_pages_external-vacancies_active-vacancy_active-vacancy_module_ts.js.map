{"version":3,"file":"src_app_pages_external-vacancies_active-vacancy_active-vacancy_module_ts.js","mappings":"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","sources":["./src/app/pages/external-vacancies/active-vacancy/active-vacancy-routing.module.ts","./src/app/pages/external-vacancies/active-vacancy/active-vacancy.component.ts","./src/app/pages/external-vacancies/active-vacancy/active-vacancy.component.html","./src/app/pages/external-vacancies/active-vacancy/active-vacancy.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { QuicklinkModule } from 'ngx-quicklink';\r\nimport { ActiveVacancyComponent } from './active-vacancy.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ActiveVacancyComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule, QuicklinkModule]\r\n})\r\nexport class ActiveVacancyRoutingModule {\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { VacancyService } from 'src/app/services/vacancy.service';\nimport { Vacancy, List } from '../../model/vacancy';\nimport { EditVacancyComponent } from '../edit-vacancy/edit-vacancy.component';\n\nimport { VacancyFormComponent } from '../vacancy-form/vacancy-form.component';\nimport { ViewVacancyComponent } from '../view-vacancy/view-vacancy.component';\n\n@Component({\n  selector: 'vex-active-vacancy',\n  templateUrl: './active-vacancy.component.html',\n  styleUrls: ['./active-vacancy.component.scss', './active-vacancy.component.css']\n})\nexport class ActiveVacancyComponent implements OnInit, AfterViewInit {\n\n  // [x: string]: any;\n\n\n  // @ViewChild(MatTable) table!: MatTable<any>;\n  dataSource!: MatTableDataSource<any>;\n\n  @ViewChild('paginator') paginator!: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n  data: Vacancy[] = [];\n  public editVacancy: List;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'company', 'vacancyName', 'vacancyAddress', 'deadLine',\n    'category', 'type', 'probationaryPeriod', 'schedule', 'status'];\n  groupedColumns: string[] = ['grouped'];\n  secondGroupedColumns: string[] = ['options'];\n  thirdGroupedColumns: string[] = ['edit'];\n  highlightedRows: any;\n\n\n  constructor(private dialogRef: MatDialog,\n    private vacancyService: VacancyService,\n    private router: Router\n  ) {\n    // this.dataSource = active VacancyTableDataSource();\n\n\n\n  }\n\n\n\n  ngOnInit() {\n\n    this.getAllActiveVacancies(0, 80);\n\n\n  }\n\n\n\n\n\n  // get all active vacancies \n\n  public getAllActiveVacancies(start: number, limit: number): void {\n    this.vacancyService.getAllActiveVacancies(start, limit).subscribe(a => {\n      this.dataSource = new MatTableDataSource(this.data = a['list']);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n\n      console.log(this.data);\n    }),\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n  }\n\n  public cancelVacancy(rowData): void {\n    rowData = this.selectedRow;\n    this.vacancyService.cancelVacancy(rowData).subscribe((result) => {\n      console.log(result)\n    })\n    setTimeout(() => {\n      window.location.reload();\n    }, 2);\n  }\n\n  public duplicateVacancy(rowData): void {\n    rowData = this.selectedRow;\n    this.vacancyService.duplicateVacancy(rowData).subscribe((result) => {\n      console.log(result)\n    })\n    setTimeout(() => {\n      window.location.reload();\n    }, 2);\n  }\n\n\n  public activeVacancy(rowData): void {\n    rowData = this.selectedRow;\n    this.vacancyService.activeVacancy(rowData).subscribe((result) => {\n      console.log(result)\n    })\n    setTimeout(() => {\n      window.location.reload();\n    }, 2);\n\n  }\n\n  public deleteVacancy(rowData): void {\n    rowData = this.selectedRow;\n    this.vacancyService.deleteVacancy(rowData).subscribe((result) => {\n      console.log(result)\n    })\n    setTimeout(() => {\n      window.location.reload();\n    }, 2);\n\n  }\n\n  refreshButton() {\n    setTimeout(() => {\n      window.location.reload();\n    }, 50);\n  }\n\n  openDialog() {\n    this.dialogRef.open(VacancyFormComponent, {\n      disableClose: true,\n      height: '950px',\n      width: '1200px'\n    });\n  }\n\n\n  editData;\n\n\n  ngAfterViewInit(): void {\n    // this.dataSource.sort = this.sort\n    // this.dataSource.paginator = this.paginator;\n    // this.table.dataSource = this.dataSource;\n  }\n  filterData($event: any) {\n    this.dataSource.filter = $event.target.value;\n  }\n\n\n  selectedRowIndex = -1;\n  highlight(vacancy) {\n    this.selectedRow = vacancy;\n    this.selectedRowIndex = vacancy.id;\n    console.log(vacancy);\n\n\n\n  }\n  selectedRow;\n\n\n  editDialog(rowData) {\n\n    rowData = this.selectedRow\n\n    this.dialogRef.open(EditVacancyComponent, {\n      // disableClose: true,\n      height: '950px',\n      width: '1400px',\n      data: this.selectedRow\n\n    })\n    console.log(rowData)\n\n  }\n\n  viewDialog(rowData) {\n\n    rowData = this.selectedRow\n\n    this.dialogRef.open(ViewVacancyComponent, {\n      // disableClose: true,\n      height: '950px',\n      width: '1400px',\n      data: this.selectedRow\n\n    })\n\n    console.log(rowData)\n\n  }\n}\n","<table mat-table class=\"full-width-table mat-elevation-z8 \" [dataSource]=\"dataSource\" matSort matSort matSortActive=\"id\"\n    matSortDirection=\"desc\" cdkDropListGroup>\n\n\n    <ng-container matColumnDef=\"grouped\">\n        <th mat-header-cell *matHeaderCellDef colspan=\"10\"> <button class=\"button-7\" role=\"button\"\n                (click)=\"openDialog()\">\n                <mat-icon [ngStyle]=\" {'color':'rgb(132, 139, 238)'}\">assignment</mat-icon>\n                New Vacancy\n            </button>\n        </th>\n    </ng-container>\n\n\n\n    <ng-container matColumnDef=\"options\">\n        <th mat-header-cell *matHeaderCellDef colspan=\"10\">\n            <div class=\"buttonDisplay\">\n                <span> <button class=\"button-7\" role=\"button\" [routerLink]=\"['/pages/allVacancies']\">ALL</button></span>\n                <span> <button class=\"button-7\" role=\"button\" [routerLink]=\"['/pages/newVacancies']\">New</button></span>\n                <span> <button class=\"button-7\" role=\"button\"\n                        (click)=\"getAllActiveVacancies(0,80)\">Active</button></span>\n                <span> <button class=\"button-7\" role=\"button\"\n                        [routerLink]=\"['/pages/cancelledVacancies']\">Cancelled</button></span>\n                <span> <button class=\"button-7\" role=\"button\"\n                        [routerLink]=\"['/pages/completedVacancies']\">Completed</button></span>\n                <span> <button class=\"button-7\" role=\"button\"\n                        [routerLink]=\"['/pages/stoppedVacancies']\">Stopped</button></span>\n                <span>\n                    <mat-form-field appearance=\"outline\" class=\"filterClass\">\n                        <input matInput placeholder=\"search\" autocomplete=\"off\" (keyup)=\"filterData($event)\">\n                    </mat-form-field>\n                </span>\n            </div>\n\n\n        </th>\n\n    </ng-container>\n\n\n\n\n\n    <ng-container matColumnDef=\"edit\">\n\n        <th mat-header-cell *matHeaderCellDef colspan=\"10\">\n            <div class=\"buttonDisplay\">\n                <span> <button class=\"button-2\" role=\"button\" (click)=\"refreshButton()\">\n                        <mat-icon>cached</mat-icon> Refresh\n                    </button></span>\n                <span> <button class=\"button-2\" role=\"button\" (click)=\"editDialog(data)\">\n                        <mat-icon>edit</mat-icon> Edit Vacancy\n                    </button></span>\n                <span> <button class=\"button-2\" role=\"button\" (click)=\"viewDialog(data)\">\n                        <mat-icon>remove_red_eye</mat-icon> View Vacancy\n                    </button></span>\n                <span> <button class=\"button-2\" role=\"button\" (click)=\"activeVacancy(data)\">\n                        <mat-icon>send</mat-icon> Active Vacancy\n                    </button></span>\n                <span> <button class=\"button-2\" role=\"button\" (click)=\"cancelVacancy(data)\">\n                        <mat-icon>cancel</mat-icon>Cancel Vacancy\n                    </button></span>\n                <span> <button class=\"button-2\" role=\"button\" (click)=\"deleteVacancy(data)\">\n                        <mat-icon>delete_forever</mat-icon> Delete Vacancy\n                    </button></span>\n                <span> <button class=\"button-2\" role=\"button\" (click)=\"duplicateVacancy(data)\">\n                        <mat-icon>file_copy</mat-icon> Duplicate Vacancy\n                    </button></span>\n            </div>\n        </th>\n    </ng-container>\n\n\n\n\n\n    <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"body\">\n            ID\n        </th>\n        <td mat-cell *matCellDef=\" let vacancy\">{{vacancy?.id}}\n\n\n        </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"company\">\n        <th mat-header-cell *matHeaderCellDef class=\"body\" mat-sort-header>\n            Company</th>\n        <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.companyName}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"vacancyName\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"body\">\n            Vacancy Title </th>\n        <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.vacancyName}}</td>\n    </ng-container>\n\n\n    <!-- <ng-container matColumnDef=\"title\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"body\">\n            Title</th>\n        <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.title}}</td>\n    </ng-container> -->\n\n\n    <ng-container matColumnDef=\"vacancyAddress\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"body\">Location</th>\n        <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.vacancyAddress}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"deadLine\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"body\">Dead Line</th>\n        <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.deadLine}}</td>\n    </ng-container>\n\n\n    <ng-container matColumnDef=\"category\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"body\">Category</th>\n        <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.categoryName}}</td>\n    </ng-container>\n\n\n\n    <!-- <ng-container matColumnDef=\"description\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"body\">Description</th>\n        <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.description}}</td>\n    </ng-container> -->\n\n    <ng-container matColumnDef=\"type\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\" body\">Type</th>\n        <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.typeName}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"probationaryPeriod\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\" body\">Probationary Period</th>\n        <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.probationaryPeriod}}</td>\n    </ng-container>\n\n\n    <ng-container matColumnDef=\"schedule\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\" body\">Schedule</th>\n        <td mat-cell *matCellDef=\"let vacancy;let i = index\">{{vacancy?.schedule}}</td>\n    </ng-container>\n\n\n    <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\" body\">Status</th>\n        <td mat-cell *matCellDef=\"let vacancy\">{{vacancy?.status}}\n\n\n        </td>\n    </ng-container>\n\n\n    <tr mat-header-row *matHeaderRowDef=\"groupedColumns; sticky: true\"></tr>\n    <tr mat-header-row *matHeaderRowDef=\"secondGroupedColumns; sticky: true\"></tr>\n    <tr mat-header-row *matHeaderRowDef=\"thirdGroupedColumns; sticky: true\"></tr>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let vacancy; columns: displayedColumns;\"\n        [ngClass]=\"{'highlighted': selectedRowIndex == vacancy.id}\" (click)=\"highlight(vacancy)\"></tr>\n\n</table>\n\n<mat-paginator class=\"full-width-table body\" #paginator [pageSize]=\"10\" [pageSizeOptions]=\"[10,20,30,50]\"\n    aria-label=\"Select page\">\n</mat-paginator>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { VacancyService } from 'src/app/services/vacancy.service';\r\nimport {\r\n    ResizableModule\r\n} from 'angular-resizable-element';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\n\r\nimport { VacancyFormModule } from '../vacancy-form/vacancy-form.module';\r\nimport { ActiveVacancyRoutingModule } from './active-vacancy-routing.module';\r\nimport { ActiveVacancyComponent } from './active-vacancy.component';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [ActiveVacancyComponent],\r\n    imports: [\r\n\r\n\r\n        CommonModule,\r\n        ActiveVacancyRoutingModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatSortModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        HttpClientModule,\r\n        MatDatepickerModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n\r\n        MatInputModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n\r\n        MatSelectModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n\r\n        MatAutocompleteModule,\r\n        MatSliderModule,\r\n        MatCheckboxModule,\r\n        MatRadioModule,\r\n        MatSlideToggleModule,\r\n\r\n        MatCardModule,\r\n        VacancyFormModule,\r\n\r\n        ResizableModule,\r\n\r\n        CdkTableModule,\r\n        ScrollingModule,\r\n        A11yModule,\r\n        MatTabsModule,\r\n    ],\r\n    providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }, VacancyService]\r\n})\r\nexport class ActiveVacancyModule {\r\n}"],"names":[],"sourceRoot":"webpack:///"}