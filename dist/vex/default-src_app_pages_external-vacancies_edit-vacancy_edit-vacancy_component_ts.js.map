{"version":3,"file":"default-src_app_pages_external-vacancies_edit-vacancy_edit-vacancy_component_ts.js","mappings":"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","sources":["./src/app/pages/external-vacancies/edit-vacancy/edit-applicant/edit-applicant.component.ts","./src/app/pages/external-vacancies/edit-vacancy/edit-applicant/edit-applicant.component.html","./src/app/pages/external-vacancies/edit-vacancy/edit-vacancy.component.ts","./src/app/pages/external-vacancies/edit-vacancy/edit-vacancy.component.html","./src/app/pages/external-vacancies/edit-vacancy/delete-program-form.component.html","./src/app/pages/external-vacancies/edit-vacancy/delete-language-form.component.html","./src/app/pages/external-vacancies/edit-vacancy/delete-skill-form.component.html","./src/app/pages/external-vacancies/edit-vacancy/new-language-form/edit-language/edit-language.component.ts","./src/app/pages/external-vacancies/edit-vacancy/new-language-form/edit-language/edit-language.component.html","./src/app/pages/external-vacancies/edit-vacancy/new-language-form/new-language-form.component.ts","./src/app/pages/external-vacancies/edit-vacancy/new-language-form/new-language-form.component.html","./src/app/pages/external-vacancies/edit-vacancy/new-program-form/edit-program/edit-program.component.ts","./src/app/pages/external-vacancies/edit-vacancy/new-program-form/edit-program/edit-program.component.html","./src/app/pages/external-vacancies/edit-vacancy/new-program-form/new-program-form.component.ts","./src/app/pages/external-vacancies/edit-vacancy/new-program-form/new-program-form.component.html","./src/app/pages/external-vacancies/edit-vacancy/new-skill-form/edit-skill/edit-skill.component.ts","./src/app/pages/external-vacancies/edit-vacancy/new-skill-form/edit-skill/edit-skill.component.html","./src/app/pages/external-vacancies/edit-vacancy/new-skill-form/new-skill-form.component.ts","./src/app/pages/external-vacancies/edit-vacancy/new-skill-form/new-skill-form.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport saveAs from 'file-saver';\nimport { Applicant } from 'src/app/pages/model/applicant';\nimport { ApplicantDepartment, ApplicantEducation, ApplicantExperience, ApplicantFile, ApplicantLanguage, ApplicantProgram, ApplicantSkill, ApplicantTraining } from 'src/app/pages/model/applicantDetail';\nimport { ApplicantService } from 'src/app/services/applicant.service';\n\nimport { DownloadService } from 'src/app/services/download.service';\nimport { environment } from 'src/environments/environment';\n\n\n\n\nconst MIME_TYPES = {\n  pdf: 'application/pdf',\n  png: 'image/png',\n  jpg: 'image/jpeg',\n  docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  doc: 'application/msword',\n  xlsx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n  xls: 'application/vnd.ms-excel'\n}\n@Component({\n  selector: 'vex-edit-applicant',\n  templateUrl: './edit-applicant.component.html',\n  styleUrls: ['./edit-applicant.component.scss', './edit-applicant.component.css']\n})\nexport class EditApplicantComponent implements OnInit {\n  applicantForm: any;\n  selectedRowAppFile: any;\n  constructor(private formBuilder: FormBuilder,\n    private router: Router,\n    private dialogRef: MatDialogRef<EditApplicantComponent>,\n    private httpClient: HttpClient,\n    private datePipe: DatePipe,\n    private applicantService: ApplicantService,\n    private downloadService: DownloadService,\n    public dialog: MatDialog,\n    @Inject(MAT_DIALOG_DATA) public editDataApplicant: any,\n  ) { }\n\n\n  displayedColumnsEdu = ['id', 'university', 'profession', 'sphere', 'quality',\n    'from', 'to', 'otherUniversity', 'description'];\n\n  displayedColumnsTrain = ['id', 'trainingName', 'trainingPlace', 'trainingCompany', 'from', 'to', 'trainingDesc'];\n  displayedColumnsExperience = ['id', 'company', 'position', 'place', 'category', 'level', 'from', 'to', 'reason', 'salary', 'description'];\n  displayedColumnsLanguage = ['id', 'language', 'level', 'otherLanguage'];\n  displayedColumnsProgram = ['id', 'program', 'level', 'otherProgram'];\n  displayedColumnsSkill = ['id', 'skill', 'level', 'otherSkill'];\n  displayedColumnsDepartment = ['id', 'department'];\n  // displayedColumnsFile = ['fileName', 'fileRecord', 'fileFormat', 'download'];\n  displayedColumnsApplicant = ['id', 'vacancyName', 'createDate']\n\n\n  dataSource!: MatTableDataSource<any>;\n  dataSourceApplicantEdu: ApplicantEducation[];\n  dataSourceApplicantTrain: ApplicantTraining[];\n  dataSourceApplicantExperience: ApplicantExperience[];\n  dataSourceApplicantLanguage: ApplicantLanguage[];\n  dataSourceApplicantProgram: ApplicantProgram[];\n  dataSourceApplicantSkill: ApplicantSkill[];\n  dataSourceApplicantDepartment: ApplicantDepartment[];\n  dataSourceApplicantFile: ApplicantFile[];\n\n  dataSourceApplicant: Applicant[] = [];\n\n  ngOnInit(): void {\n    this.applicantForm = this.formBuilder.group({\n      id: this.editDataApplicant.id,\n      objectId: this.editDataApplicant.objectId,\n      applicantId: this.editDataApplicant.applicantId,\n      name: [this.editDataApplicant.fname],\n      LName: [this.editDataApplicant.lname],\n      customerNumber: [this.editDataApplicant.customerNumber],\n      birthDate: [this.editDataApplicant.birthDate],\n      gender: [this.editDataApplicant.genderId],\n      registrationCountry: [this.editDataApplicant.registrationCountry],\n      registrationCity: [this.editDataApplicant.registrationCity],\n      registrationAddress: [this.editDataApplicant.registrationAddress],\n      country: [this.editDataApplicant.country],\n      city: [this.editDataApplicant.city],\n      address: [this.editDataApplicant.address],\n      mail: [this.editDataApplicant.mail],\n      phone: [this.editDataApplicant.phone],\n      additionalphone: [this.editDataApplicant.additionalphone],\n      cityzen: [this.editDataApplicant.cityzen],\n      workStart: [this.editDataApplicant.workStart],\n      wontedType: [this.editDataApplicant.wantedTypeId],\n      workSchedule: [this.editDataApplicant.workSheduleId],\n      wontedPosition: [this.editDataApplicant.wantedPosition],\n      workPlace: [this.editDataApplicant.workPlace],\n      wontedSalary: [this.editDataApplicant.wantedSalary],\n      connectionId: [this.editDataApplicant.connectionId],\n      relativityName: [this.editDataApplicant.relativityName],\n      relativityPosition: [this.editDataApplicant.relativityPosition],\n      relativityPlaceWork: [this.editDataApplicant.relativityPlaceWork],\n      relativityMobile: [this.editDataApplicant.relativityMobile],\n      createDate: [this.editDataApplicant.createDate],\n      createUser: [this.editDataApplicant.createUser]\n\n    })\n    if (this.editDataApplicant) {\n      this.applicantForm.controls['id'].setValue(this.editDataApplicant.id);\n      this.applicantForm.controls['objectId'].setValue(this.editDataApplicant.objectId);\n      this.applicantForm.controls['applicantId'].setValue(this.editDataApplicant.applicantId);\n      this.applicantForm.controls['name'].setValue(this.editDataApplicant.fname);\n      this.applicantForm.controls['LName'].setValue(this.editDataApplicant.lname);\n      this.applicantForm.controls['wontedType'].setValue(this.editDataApplicant.wantedTypeId);\n    }\n\n    // this.geteditApplicant(1, 0, 25);\n    this.getGenders();\n    this.getWantedType();\n    this.getGraphicType();\n    this.getConnection();\n    this.getApplicantEdu(1, 0, 25);\n    this.getEducation();\n    this.getApplicantTrain(1, 0, 25);\n    this.getExperience();\n    this.getApplicantExperience(1, 0, 25);\n    this.getLanguages();\n    this.getUniversity();\n    this.getApplicantLanguage(1, 0, 25);\n    this.getLangLevel();\n    this.getApplicantProgram(1, 0, 25);\n    this.getProgram();\n    this.getProgramLevel();\n    this.getSkill();\n    this.getApplicantSkill(1, 0, 25);\n    this.getApplicantDepartment(1, 0, 25);\n    this.getApplicantFile(1, 0, 25);\n    this.getApplicantsVacancies(1, 0, 25)\n    console.log(this.DownloadFiles)\n\n  }\n\n  attachedFile: ApplicantFile[];\n  download(id) {\n    const EXT = this.selectedRowAppFile.fileName.substring(this.selectedRowAppFile.fileName.lastIndexOf('.') + 1);\n    this.downloadService.downloadFile({ 'id': id }).subscribe(fileData =>\n      saveAs(new Blob([fileData], { type: MIME_TYPES[EXT] }), this.selectedRowAppFile.fileName))\n\n  }\n\n  public DownloadFiles = environment.apiBaseUrl + '/VacancyAdmin/applicant/file/download?id=';\n\n  selectedRowIndexAppFile = -1;\n  highlightApp(applicantsFile) {\n    this.selectedRowAppFile = applicantsFile;\n    this.selectedRowIndexAppFile = applicantsFile.id;\n    console.log(applicantsFile);\n  };\n  closeForm() {\n    this.dialogRef.close()\n  }\n  // applicants\n  geteditApplicant(page: number, start: number, limit: number) {\n    this.applicantService.editApplicant(this.editDataApplicant.applicantId, page, start, limit).subscribe(x => {\n      this.dataSource = new MatTableDataSource(this.dataSourceApplicant = x['list']);\n      // console.log(x['list'])\n      console.log(this.dataSourceApplicant)\n    }),\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n  }\n\n  getApplicantsVacancies(page: number, start: number, limit: number) {\n    this.applicantService.applicantsVacancies(this.editDataApplicant.applicantId, page, start, limit).subscribe(x => {\n      this.dataSource = new MatTableDataSource(this.dataSourceApplicant = x['list']);\n      // console.log(x['list'])\n      console.log(this.dataSourceApplicant)\n    }),\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n  }\n  //applicant language\n  getApplicantLanguage(page: number, start: number, limit: number) {\n    this.applicantService.applicantLanguage(this.editDataApplicant.applicantId, page, start, limit).subscribe(x => {\n      this.dataSource = new MatTableDataSource(this.dataSourceApplicantLanguage = x['list']);\n      // console.log(x['list'])\n      console.log(this.dataSourceApplicantLanguage)\n    }),\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n\n  }\n  //applicant experience\n  getApplicantExperience(page: number, start: number, limit: number) {\n    this.applicantService.applicantExperience(this.editDataApplicant.applicantId, page, start, limit).subscribe(x => {\n      this.dataSource = new MatTableDataSource(this.dataSourceApplicantExperience = x['list']);\n      console.log(x['list'])\n      console.log(this.dataSourceApplicantExperience)\n    }),\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n  }\n  //applicant skill\n\n  getApplicantSkill(page: number, start: number, limit: number) {\n    this.applicantService.applicantSkill(this.editDataApplicant.applicantId, page, start, limit).subscribe(x => {\n      this.dataSource = new MatTableDataSource(this.dataSourceApplicantSkill = x['list']);\n      // console.log(x['list'])\n      console.log(this.dataSourceApplicantSkill)\n    }),\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n  }\n  //applicant department\n  getApplicantDepartment(page: number, start: number, limit: number) {\n    this.applicantService.applicantDepartment(this.editDataApplicant.applicantId, page, start, limit).subscribe(x => {\n      this.dataSource = new MatTableDataSource(this.dataSourceApplicantDepartment = x['list']);\n      // console.log(x['list'])\n      console.log(this.dataSourceApplicantDepartment)\n    }),\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n  }\n  //applicant program\n  getApplicantProgram(page: number, start: number, limit: number) {\n    this.applicantService.applicantProgram(this.editDataApplicant.applicantId, page, start, limit).subscribe(x => {\n      this.dataSource = new MatTableDataSource(this.dataSourceApplicantProgram = x['list']);\n      // console.log(x['list'])\n      console.log(this.dataSourceApplicantProgram)\n    }),\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n  }\n\n\n  //applicant education\n  getApplicantEdu(page: number, start: number, limit: number) {\n    this.applicantService.applicantEdu(this.editDataApplicant.applicantId, page, start, limit).subscribe(x => {\n      this.dataSource = new MatTableDataSource(this.dataSourceApplicantEdu = x['list']);\n      // console.log(x['list'])\n      console.log(this.dataSourceApplicantEdu)\n    }),\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n  }\n  //applicant training\n  getApplicantTrain(page: number, start: number, limit: number) {\n    this.applicantService.applicantTrain(this.editDataApplicant.applicantId, page, start, limit).subscribe(x => {\n      this.dataSource = new MatTableDataSource(this.dataSourceApplicantTrain = x['list']);\n      // console.log(x['list'])\n      console.log(this.dataSourceApplicantTrain)\n    }),\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n  }\n\n  //applicant file\n  getApplicantFile(page: number, start: number, limit: number) {\n    this.applicantService.applicantFile(this.editDataApplicant.applicantId, page, start, limit).subscribe(x => {\n      this.dataSource = new MatTableDataSource(this.dataSourceApplicantFile = x['list']);\n      // console.log(x['list'])\n      console.log(this.dataSourceApplicantFile)\n    }),\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n  }\n\n  dataEducation;\n\n  getEducation() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.educationLevel&includeKeys=&excludeKeys=&page=1&start=0&limit=25').subscribe(\n      response => {\n        console.log(response);\n        this.dataEducation = response['list']\n      }\n\n    )\n  }\n\n  dataSkill;\n  getSkill() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.skill&includeKeys=&excludeKeys=&page=1&start=0&limit=25').subscribe(\n      response => {\n        console.log(response);\n        this.dataSkill = response['list']\n      }\n\n    )\n  }\n\n\n\n  refreshButton() {\n    this.ngOnInit()\n\n  }\n\n\n  //experience Level\n  dataExperience;\n  getExperience() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.experienceLevel&includeKeys=&excludeKeys=&page=1&start=0&limit=25')\n      .subscribe(\n        response => {\n          console.log(response);\n          this.dataExperience = response['list']\n        }\n\n      )\n  };\n\n  dataProgram;\n  getProgramLevel() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.programLevel&includeKeys=&excludeKeys=&page=1&start=0&limit=25')\n      .subscribe(\n        response => {\n          console.log(response);\n          this.dataProgram = response['list']\n        }\n\n      )\n  }\n\n  saveEditApplicant() {\n    // this.applicantService.editApplicant(this.editDataApplicant.applicantId, this.applicantForm.value).subscribe((result) => {\n    //   console.log(result);\n    // })\n  }\n  dataGender;\n  getGenders() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.gender&includeKeys=&excludeKeys=&page=1&start=0&limit=25')\n      .subscribe(\n        response => {\n          console.log(response);\n          this.dataGender = response['list']\n        }\n\n      )\n  };\n\n  wantedType;\n  getWantedType() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.work&includeKeys=&excludeKeys=&page=1&start=0&limit=25').subscribe(\n      response => {\n        console.log(response);\n        this.wantedType = response['list']\n      }\n\n    )\n  };\n\n  graphicType;\n  getGraphicType() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.grafic&includeKeys=&excludeKeys=&page=1&start=0&limit=25').subscribe(\n      response => {\n        console.log(response);\n        this.graphicType = response['list']\n      }\n\n    )\n  };\n\n  connection;\n  getConnection() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.relative&includeKeys=&excludeKeys=&page=1&start=0&limit=25').subscribe(\n      response => {\n        console.log(response);\n        this.connection = response['list']\n      }\n\n    )\n  }\n\n\n  //for language\n  dataLanguage;\n  getLanguages() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.language&includeKeys=&excludeKeys=&page=1&start=0&limit=25').subscribe(\n      response => {\n        console.log(response);\n        this.dataLanguage = response['list']\n      }\n\n    )\n  }\n  // for program\n  programList;\n  getProgram() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.program&includeKeys=&excludeKeys=&page=1&start=0&limit=25').subscribe(\n      response => {\n        console.log(response);\n        this.programList = response['list']\n      }\n\n    )\n  }\n\n  // for university\n  dataUniversity;\n  getUniversity() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.university&includeKeys=&excludeKeys=&page=1&start=0&limit=25').subscribe(\n      response => {\n        console.log(response);\n        this.dataUniversity = response['list']\n      }\n\n    )\n  }\n\n  // for language level\n  dataLangLevel;\n  getLangLevel() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.languageLevel&includeKeys=&excludeKeys=&page=1&start=0&limit=25').subscribe(\n      response => {\n        console.log(response);\n        this.dataLangLevel = response['list']\n      }\n\n    )\n  }\n}","<h3 mat-dialog-title> {{this.editDataApplicant.fname}} {{this.editDataApplicant.lname}} Details </h3>\n<mat-tab-group>\n    <mat-tab label=\"General Information\">\n        <form [formGroup]=\"applicantForm\" class=\"form-container\">\n            <mat-card>\n\n                <mat-card-content>\n                    <div class=\" flex flex-col sm:flex-row sm:gap-8 \">\n                        <span> Name: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 10%;\">\n                            <input formControlName=\"name\" matInput>\n\n                        </mat-form-field>\n\n                        <span> LName: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 10%;\">\n                            <input formControlName=\"LName\" matInput>\n\n                        </mat-form-field>\n                        <span> Customer Number: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 10%;\">\n                            <input formControlName=\"customerNumber\" matInput>\n                        </mat-form-field>\n\n                        <span> Birth Date: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 10%;\">\n                            <input formControlName=\"birthDate\" matInput>\n                        </mat-form-field>\n\n\n                        <span>Gender:</span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 10%;\">\n                            <mat-select formControlName=\"gender\">\n                                <mat-option *ngFor=\"let gender of dataGender\" [value]=\"gender.id\">{{gender.name}}\n                                </mat-option>\n\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\" flex flex-col sm:flex-row sm:gap-8 \">\n                        <span> Registration Country: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 15%;\">\n                            <input formControlName=\"registrationCountry\" matInput>\n                        </mat-form-field>\n                        <span> Registration City: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 15%;\">\n                            <input formControlName=\"registrationCity\" matInput>\n                        </mat-form-field>\n                        <span> Registration Address: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 15%;\">\n                            <input formControlName=\"registrationAddress\" matInput>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\" flex flex-col sm:flex-row sm:gap-8 \">\n                        <span> Country: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 15%;\">\n                            <input formControlName=\"country\" matInput>\n                        </mat-form-field>\n                        <span> City: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 15%;\">\n                            <input formControlName=\"city\" matInput>\n                        </mat-form-field>\n                        <span> Address: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 15%;\">\n                            <input formControlName=\"address\" matInput>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\" flex flex-col sm:flex-row sm:gap-8 \">\n                        <span> Mail: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 15%;\">\n                            <input formControlName=\"mail\" matInput>\n                        </mat-form-field>\n                        <span> Mobile: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 10%;\">\n                            <input formControlName=\"phone\" matInput>\n                        </mat-form-field>\n                        <span> Additional phone: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 10%;\">\n                            <input formControlName=\"additionalphone\" matInput>\n                        </mat-form-field>\n                        <span> Citizen: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 10%;\">\n                            <input formControlName=\"cityzen\" matInput>\n                        </mat-form-field>\n                        <span> Work Start: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 10%;\">\n                            <input formControlName=\"workStart\" matInput>\n                        </mat-form-field>\n                    </div>\n                    <div class=\" flex flex-col sm:flex-row sm:gap-8 \">\n                        <span>Wanted Type:</span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 10%;\">\n                            <mat-select formControlName=\"wontedType\">\n                                <mat-option *ngFor=\"let wanted of wantedType\" [value]=\"wanted.id\">{{wanted.name}}\n                                </mat-option>\n\n                            </mat-select>\n                        </mat-form-field>\n\n                        <span>Wark Schedule:</span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 15%;\">\n                            <mat-select formControlName=\"workSchedule\">\n                                <mat-option *ngFor=\"let schedule of graphicType\" [value]=\"schedule.id\">{{schedule.name}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <span> Wanted Position: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 10%;\">\n                            <input formControlName=\"wontedPosition\" matInput>\n                        </mat-form-field>\n                        <span> Work Place: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 10%;\">\n                            <input formControlName=\"workPlace\" matInput>\n                        </mat-form-field>\n                        <span> Wanted Salary: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 10%;\">\n                            <input formControlName=\"wontedSalary\" matInput>\n                        </mat-form-field>\n                    </div>\n                    <div class=\" flex flex-col sm:flex-row sm:gap-8 \">\n                        <span>Connection:</span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 10%;\">\n                            <mat-select formControlName=\"connectionId\">\n                                <mat-option *ngFor=\"let connection of connection\"\n                                    [value]=\"connection.id\">{{connection.name}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <span> Relativity Name: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 10%;\">\n                            <input formControlName=\"relativityName\" matInput>\n                        </mat-form-field>\n                        <span> Relativity Position: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 10%;\">\n                            <input formControlName=\"relativityPosition\" matInput>\n                        </mat-form-field>\n                        <span> Relativity PlaceWork: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 10%;\">\n                            <input formControlName=\"relativityPlaceWork\" matInput>\n                        </mat-form-field>\n\n                    </div>\n                    <div class=\" flex flex-col sm:flex-row sm:gap-8 \">\n                        <span> Relativity Mobile: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 10%;\">\n                            <input formControlName=\"relativityMobile\" matInput>\n                        </mat-form-field>\n                        <span> Create Date: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 10%;\">\n                            <input formControlName=\"createDate\" matInput>\n                            <mat-datepicker #datepickerRefa></mat-datepicker>\n                        </mat-form-field>\n                        <span> Create User: </span>\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 12px; width: 15%;\">\n                            <input formControlName=\"createUser\" matInput>\n                        </mat-form-field>\n                    </div>\n                </mat-card-content>\n                <button class=\"button-7  displayEnd\" role=\"button\" (click)=\"closeForm()\">Close</button>\n            </mat-card>\n\n\n        </form>\n    </mat-tab>\n\n\n    <mat-tab label=\" Education\">\n        <div class=\"buttonDisplay\">\n\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"refreshButton()\">\n                    <mat-icon>cached</mat-icon> Refresh\n                </button></span>\n        </div>\n        <table mat-table [dataSource]=\"dataSourceApplicantEdu\" style=\"width: 100%;\">\n\n            <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    ID\n                </th>\n                <td mat-cell *matCellDef=\" let educationData\">{{educationData?.id}} </td>\n\n            </ng-container>\n\n            <ng-container matColumnDef=\"university\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    University\n                </th>\n                <td mat-cell *matCellDef=\" let educationData\">{{educationData?.universityName}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"profession\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Profession\n                </th>\n                <td mat-cell *matCellDef=\" let educationData\">{{educationData?.proffesion}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"sphere\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Sphere\n                </th>\n                <td mat-cell *matCellDef=\" let educationData\">{{educationData?.sphereName}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"quality\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Quality\n                </th>\n                <td mat-cell *matCellDef=\" let educationData\">{{educationData?.qualityName}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"from\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    From\n                </th>\n                <td mat-cell *matCellDef=\" let educationData\">{{educationData?.learningfrom}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"to\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    To\n                </th>\n                <td mat-cell *matCellDef=\" let educationData\">{{educationData?.learningTo}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"otherUniversity\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Other University\n                </th>\n                <td mat-cell *matCellDef=\" let educationData\">{{educationData?.otherUniversity}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"description\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Description\n                </th>\n                <td mat-cell *matCellDef=\" let educationData\">{{educationData?.description}} </td>\n\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsEdu; sticky: true\"></tr>\n            <tr mat-row *matRowDef=\"let educationData; columns: displayedColumnsEdu;\"></tr>\n\n\n        </table>\n        <button class=\"button-7  displayEnd\" role=\"button\" (click)=\"closeForm()\">Close</button>\n    </mat-tab>\n\n    <mat-tab label=\" Training\">\n        <div class=\"buttonDisplay\">\n\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"refreshButton()\">\n                    <mat-icon>cached</mat-icon> Refresh\n                </button></span>\n        </div>\n        <table mat-table [dataSource]=\"dataSourceApplicantTrain\" style=\"width: 100%;\">\n\n            <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    ID\n                </th>\n                <td mat-cell *matCellDef=\" let trainingData\">{{trainingData?.id}} </td>\n\n            </ng-container>\n\n            <ng-container matColumnDef=\"trainingName\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Training Name\n                </th>\n                <td mat-cell *matCellDef=\" let trainingData\">{{trainingData?.traning}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"trainingPlace\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Training Place\n                </th>\n                <td mat-cell *matCellDef=\" let trainingData\">{{trainingData?.trainingPlace}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"trainingCompany\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Training Company\n                </th>\n                <td mat-cell *matCellDef=\" let trainingData\">{{trainingData?.trainingCompany}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"from\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    From\n                </th>\n                <td mat-cell *matCellDef=\" let trainingData\">{{trainingData?.trainingPeriodFrom}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"to\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    To\n                </th>\n                <td mat-cell *matCellDef=\" let trainingData\">{{trainingData?.trainingPeriodTo}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"trainingDesc\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    trainingDesc\n                </th>\n                <td mat-cell *matCellDef=\" let trainingData\">{{trainingData?.description}} </td>\n\n            </ng-container>\n\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsTrain; sticky: true\"></tr>\n            <tr mat-row *matRowDef=\"let trainingData; columns: displayedColumnsTrain;\"></tr>\n        </table>\n        <button class=\"button-7  displayEnd\" role=\"button\" (click)=\"closeForm()\">Close</button>\n    </mat-tab>\n    <mat-tab label=\" Experience\">\n        <div class=\"buttonDisplay\">\n\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"refreshButton()\">\n                    <mat-icon>cached</mat-icon> Refresh\n                </button></span>\n        </div>\n        <table mat-table [dataSource]=\"dataSourceApplicantExperience\" style=\"width: 100%;\">\n\n            <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    ID\n                </th>\n                <td mat-cell *matCellDef=\" let experienceData\">{{experienceData?.id}} </td>\n\n            </ng-container>\n\n            <ng-container matColumnDef=\"company\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Company\n                </th>\n                <td mat-cell *matCellDef=\" let experienceData\">{{experienceData?.company}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"position\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Position\n                </th>\n                <td mat-cell *matCellDef=\" let experienceData\">{{experienceData?.position}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"place\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Place\n                </th>\n                <td mat-cell *matCellDef=\" let experienceData\">{{experienceData?.place}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"category\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Category\n                </th>\n                <td mat-cell *matCellDef=\" let experienceData\">{{experienceData?.categoryName}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"level\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Level\n                </th>\n                <td mat-cell *matCellDef=\" let experienceData\">{{experienceData?.levelName}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"from\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    From\n                </th>\n                <td mat-cell *matCellDef=\" let experienceData\">{{experienceData?.periodFrom}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"to\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    To\n                </th>\n                <td mat-cell *matCellDef=\" let experienceData\">{{experienceData?.periodTo}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"reason\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Reason\n                </th>\n                <td mat-cell *matCellDef=\" let experienceData\">{{experienceData?.reason}} </td>\n\n            </ng-container>\n\n            <ng-container matColumnDef=\"salary\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Salary\n                </th>\n                <td mat-cell *matCellDef=\" let experienceData\">{{experienceData?.salary}} </td>\n\n            </ng-container>\n\n            <ng-container matColumnDef=\"description\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Description\n                </th>\n                <td mat-cell *matCellDef=\" let experienceData\">{{experienceData?.workDesc}} </td>\n\n            </ng-container>\n\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsExperience; sticky: true\"></tr>\n            <tr mat-row *matRowDef=\"let experienceData; columns: displayedColumnsExperience;\"></tr>\n        </table>\n        <button class=\"button-7  displayEnd\" role=\"button\" (click)=\"closeForm()\">Close</button>\n    </mat-tab>\n    <mat-tab label=\" Language\">\n        <div class=\"buttonDisplay\">\n\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"refreshButton()\">\n                    <mat-icon>cached</mat-icon> Refresh\n                </button></span>\n\n        </div>\n        <table mat-table [dataSource]=\"dataSourceApplicantLanguage\" style=\"width: 100%;\">\n\n            <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    ID\n                </th>\n                <td mat-cell *matCellDef=\" let languageData\">{{languageData?.id}} </td>\n\n            </ng-container>\n\n            <ng-container matColumnDef=\"language\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Language\n                </th>\n                <td mat-cell *matCellDef=\" let languageData\">{{languageData?.languageName}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"level\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Level\n                </th>\n                <td mat-cell *matCellDef=\" let languageData\">{{languageData?.levelName}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"otherLanguage\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Comment\n                </th>\n                <td mat-cell *matCellDef=\" let languageData\">{{languageData?.otherLanguage}}</td>\n\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsLanguage; sticky: true\"></tr>\n            <tr mat-row *matRowDef=\"let languageData; columns: displayedColumnsLanguage;\"></tr>\n        </table>\n        <button class=\"button-7  displayEnd\" role=\"button\" (click)=\"closeForm()\">Close</button>\n    </mat-tab>\n    <mat-tab label=\" Program\">\n        <div class=\"buttonDisplay\">\n\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"refreshButton()\">\n                    <mat-icon>cached</mat-icon> Refresh\n                </button></span>\n\n        </div>\n        <table mat-table [dataSource]=\"dataSourceApplicantProgram\" style=\"width: 100%;\">\n\n            <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    ID\n                </th>\n                <td mat-cell *matCellDef=\" let programData\">{{programData?.id}} </td>\n\n            </ng-container>\n\n            <ng-container matColumnDef=\"program\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Program\n                </th>\n                <td mat-cell *matCellDef=\" let programData\">{{programData?.programName}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"level\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Level\n                </th>\n                <td mat-cell *matCellDef=\" let programData\">{{programData?.levelName}} </td>\n\n            </ng-container>\n\n            <ng-container matColumnDef=\"otherProgram\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Comment\n                </th>\n                <td mat-cell *matCellDef=\" let programData\">{{programData?.otherProgram}} </td>\n\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsProgram; sticky: true\"></tr>\n            <tr mat-row *matRowDef=\"let programData; columns: displayedColumnsProgram;\"></tr>\n        </table>\n        <button class=\"button-7  displayEnd\" role=\"button\" (click)=\"closeForm()\">Close</button>\n    </mat-tab>\n    <mat-tab label=\" Skill\">\n\n        <div class=\"buttonDisplay\">\n\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"refreshButton()\">\n                    <mat-icon>cached</mat-icon> Refresh\n                </button></span>\n\n        </div>\n        <table mat-table [dataSource]=\"dataSourceApplicantSkill\" style=\"width: 100%;\">\n\n            <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    ID\n                </th>\n                <td mat-cell *matCellDef=\" let skillData\">{{skillData?.id}} </td>\n\n            </ng-container>\n\n            <ng-container matColumnDef=\"skill\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Skill\n                </th>\n                <td mat-cell *matCellDef=\" let skillData\">{{skillData?.skillName}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"level\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Level\n                </th>\n                <td mat-cell *matCellDef=\" let skillData\">{{skillData?.levelName}} </td>\n\n            </ng-container>\n\n            <ng-container matColumnDef=\"otherSkill\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Comment\n                </th>\n                <td mat-cell *matCellDef=\" let skillData\">{{skillData?.otherSkill}} </td>\n\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsSkill; sticky: true\"></tr>\n            <tr mat-row *matRowDef=\"let skillData; columns: displayedColumnsSkill;\"></tr>\n        </table>\n        <button class=\"button-7  displayEnd\" role=\"button\" (click)=\"closeForm()\">Close</button>\n    </mat-tab>\n    <mat-tab label=\" Department\">\n        <div class=\"buttonDisplay\">\n\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"refreshButton()\">\n                    <mat-icon>cached</mat-icon> Refresh\n                </button></span>\n\n        </div>\n        <table mat-table [dataSource]=\"dataSourceApplicantDepartment\" style=\"width: 100%;\">\n\n            <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    ID\n                </th>\n                <td mat-cell *matCellDef=\" let departmentData\">{{departmentData?.id}} </td>\n\n            </ng-container>\n\n            <ng-container matColumnDef=\"department\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Department\n                </th>\n                <td mat-cell *matCellDef=\" let departmentData\">{{departmentData?.departmentName}} </td>\n\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsDepartment; sticky: true\"></tr>\n            <tr mat-row *matRowDef=\"let departmentData; columns: displayedColumnsDepartment;\"></tr>\n        </table>\n        <button class=\"button-7  displayEnd\" role=\"button\" (click)=\"closeForm()\">Close</button>\n    </mat-tab>\n\n    <!-- <mat-tab label=\" Files\">\n        <div class=\"buttonDisplay\">\n\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"refreshButton()\">\n                    <mat-icon>cached</mat-icon> Refresh\n                </button></span> -->\n    <!-- <span> <button class=\"button-2\" role=\"button\" (click)=\"download(selectedRowAppFile.id)\">\n                    <mat-icon>cached</mat-icon> Download\n                </button></span> -->\n\n    <!-- </div>\n        <table mat-table [dataSource]=\"dataSourceApplicantFile\" style=\"width: 100%;\">\n\n            <ng-container matColumnDef=\"fileName\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    File Name\n                </th>\n                <td mat-cell *matCellDef=\" let fileData\">\n                    <a href=\"{{DownloadFiles+''+ fileData.id}}\" target=\"_blank\">\n                        {{fileData?.fileName}}\n                    </a>\n                </td>\n\n            </ng-container>\n\n            <ng-container matColumnDef=\"fileRecord\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    File RecordKey\n                </th>\n                <td mat-cell *matCellDef=\" let fileData\">{{fileData?.recordKey}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"fileFormat\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Download\n                </th>\n                <td mat-cell *matCellDef=\" let fileData\">{{fileData?.fileFormat}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"download\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Download\n                </th>\n                <td mat-cell *matCellDef=\" let fileData\"><a href=\"{{DownloadFiles+''+ fileData.id}}\"\n                        target=\"_blank\"><mat-icon>download</mat-icon></a></td>\n\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsFile; sticky: true\"></tr>\n            <tr mat-row *matRowDef=\"let fileData; columns: displayedColumnsFile;\"\n                [ngClass]=\"{'highlighted': selectedRowIndexAppFile ==  fileData.id}\" (click)=\"highlightApp(fileData)\">\n            </tr>\n        </table>\n        <button class=\"button-7  displayEnd\" role=\"button\" (click)=\"closeForm()\">Close</button>\n    </mat-tab> -->\n    <mat-tab label=\"Vacancies of Applicant\">\n        <div class=\"buttonDisplay\">\n\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"refreshButton()\">\n                    <mat-icon>cached</mat-icon> Refresh\n                </button></span>\n\n        </div>\n        <table mat-table [dataSource]=\"dataSourceApplicant\">\n\n            <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    ID\n                </th>\n                <td mat-cell *matCellDef=\" let applicantData\">{{applicantData?.vacancyId}} </td>\n\n            </ng-container>\n\n            <ng-container matColumnDef=\"vacancyName\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Vacancy Title\n                </th>\n                <td mat-cell *matCellDef=\" let fileData\">{{fileData?.vacancyName}} </td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"createDate\">\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\n                    Apply Date\n                </th>\n                <td mat-cell *matCellDef=\" let fileData\">{{fileData?.applyDate}} </td>\n\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsApplicant; sticky: true\"></tr>\n            <tr mat-row *matRowDef=\"let applicantData; columns: displayedColumnsApplicant;\"></tr>\n        </table>\n        <button class=\"button-7  displayEnd\" role=\"button\" (click)=\"closeForm()\">Close</button>\n    </mat-tab>\n</mat-tab-group>","import { DatePipe, formatDate } from '@angular/common';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormControlName, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\n\nimport { ApplicantService } from 'src/app/services/applicant.service';\nimport { VacancyService } from 'src/app/services/vacancy.service';\nimport { Applicant } from '../../model/applicant';\nimport { List, Vacancy } from '../../model/vacancy';\nimport { VacancyApplicant } from '../../model/vacancy-applicant-model';\nimport { ListLanguage, LanguageVacancy } from '../../model/vacancy-language-model';\nimport { ListProgram, ProgramVacancy } from '../../model/vacancy-program-model';\nimport { VacancyShortListApplicant } from '../../model/vacancy-shortList-model';\nimport { ListSkill, SkillVacancy } from '../../model/vacancy-skill-model';\nimport { EditApplicantComponent } from './edit-applicant/edit-applicant.component';\n\nimport { EditLanguageComponent } from './new-language-form/edit-language/edit-language.component';\n\nimport { NewLanguageFormComponent } from './new-language-form/new-language-form.component';\nimport { EditProgramComponent } from './new-program-form/edit-program/edit-program.component';\nimport { NewProgramFormComponent } from './new-program-form/new-program-form.component';\nimport { EditSkillComponent } from './new-skill-form/edit-skill/edit-skill.component';\nimport { NewSkillFormComponent } from './new-skill-form/new-skill-form.component';\n\nimport saveAs from 'file-saver';\nimport { environment } from 'src/environments/environment';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\n@Component({\n  selector: 'vex-edit-vacancy',\n  templateUrl: './edit-vacancy.component.html',\n  styleUrls: ['./edit-vacancy.component.scss', './edit-vacancy.component.css']\n})\nexport class EditVacancyComponent implements OnInit {\n  convertDate: string;\n  selectedRow;\n  dataSource!: MatTableDataSource<any>;\n\n  dataSourceProgram: ListProgram[]\n  showAlert = false;\n  vacancyForm: any;\n\n\n\n  data: Applicant[] = [];\n\n  dataSourceLanguage: ListLanguage[];\n\n  dataSourceSkill: ListSkill[];\n\n  dataSourceApplicant: VacancyApplicant[];\n\n  dataSourceShortListApplicant: VacancyShortListApplicant[];\n\n\n  displayedColumns = ['id', 'languages', 'comment'];\n\n  columnToDisplay = ['id', 'programs', 'comment'];\n\n  displayedColumnsSkill = ['id', 'skills', 'comment'];\n\n  displayedColumnsApplicants = ['id', 'firstName', 'lastName', 'personalNumber',\n    'bDay', 'mail', 'mobile', 'applyDate', 'link'];\n\n  displayedColumnsShortList = ['id', 'firstName', 'lastName', 'personalNumber',\n    'bDay', 'mail', 'mobile', 'applyDate', 'link']\n  vacancyProgramForm: any;\n  selectedRowS: any;\n  selectedRowL: any;\n  selectedRowApp: any;\n  selectedRowAppS: any;\n  vacancyDetail: any;\n  page: number;\n  constructor(private formBuilder: FormBuilder,\n    private router: Router,\n    private dialogRef: MatDialog,\n    private vacancyService: VacancyService,\n    private datePipe: DatePipe,\n    private httpClient: HttpClient,\n    public dialog: MatDialog,\n    private applicantService: ApplicantService,\n    @Inject(MAT_DIALOG_DATA) public editData: any,\n    @Inject(MAT_DATE_LOCALE) public locale: string,\n\n\n  ) { }\n\n\n  // deadLineForm = this.editData.deadLine\n  ngOnInit(): void {\n\n\n    this.vacancyForm = this.formBuilder.group({\n      companyId: [''],\n      vacancyName: ['', Validators.required],\n      vacancyAddress: ['', Validators.required],\n      deadLine: [''],\n      schedule: ['', Validators.required],\n      categoryId: ['', Validators.required],\n      typeId: ['', Validators.required],\n      description: ['', Validators.required],\n      experience: ['', Validators.required],\n      probationaryPeriod: ['', Validators.required],\n      educationLevelId: ['', Validators.required],\n\n      experienceSphereId: [''],\n      educationSphereComment: [''],\n      salary: [''],\n\n    });\n\n\n\n\n    if (this.editData) {\n      this.vacancyForm.controls['companyId'].setValue(this.editData.companyId);\n      this.vacancyForm.controls['vacancyName'].setValue(this.editData.vacancyName);\n      this.vacancyForm.controls['vacancyAddress'].setValue(this.editData.vacancyAddress);\n      this.vacancyForm.controls['deadLine'].setValue(this.vacancyForm.value.deadLine);\n      this.vacancyForm.controls['schedule'].setValue(this.editData.schedule);\n      this.vacancyForm.controls['categoryId'].setValue(this.editData.categoryId);\n      this.vacancyForm.controls['typeId'].setValue(this.editData.typeId);\n      this.vacancyForm.controls['description'].setValue(this.editData.description);\n      this.vacancyForm.controls['experience'].setValue(this.editData.experience);\n      this.vacancyForm.controls['probationaryPeriod'].setValue(this.editData.probationaryPeriod);\n\n      this.vacancyForm.controls['educationLevelId'].setValue(this.editData.educationLevelId);\n\n      this.vacancyForm.controls['experienceSphereId'].setValue(this.editData.experienceSphereId);\n      this.vacancyForm.controls['educationSphereComment'].setValue(this.editData.educationSphereComment);\n      this.vacancyForm.controls['salary'].setValue(this.editData.salary);\n    };\n\n\n    console.log(this.editData.value)\n    console.log(this.vacancyForm.value)\n\n    this.getAllProgram();\n    this.getAllLanguage();\n    this.getAllSkill();\n    this.getAllApplicants();\n    this.getAllShortListApplicants();\n    this.getcategory();\n    this.getEducation();\n    this.getSphere();\n    this.getType();\n\n    this.getCompany();\n\n    console.log(this.DownloadLink);\n  };\n\n\n\n  updateFormData() {\n    console.log('Form data is ', this.vacancyForm.value);\n    // this.vacancyForm.value.deadLine = formatDate(this.vacancyForm.value.deadLine, 'EEEE, MMMM d, y, h:mm:ss a zzzz', this.locale, ' en-GB')\n    this.vacancyForm.value.deadLine = this.datePipe.transform(this.vacancyForm.value.deadLine, 'dd-MM-yyyy')\n    // this.vacancyForm.value.deadLine = formatDate(this.vacancyForm.deadLine, 'dd-MM-yyyy HH:mm:ss.SS', 'en-GB')\n    this.vacancyService.updateVacancy(this.vacancyForm.value, this.editData.id).subscribe((result) => {\n      console.log(result);\n      setTimeout(() => {\n        window.location.reload();\n      }, 50);\n    })\n\n    this.dialogRef.closeAll();\n  }\n\n  closeForm() {\n    this.dialogRef.closeAll();\n  }\n\n  refreshButton() {\n    this.ngOnInit()\n  }\n\n\n  companyList;\n  getCompany() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.company&includeKeys=&excludeKeys=&page=1&start=0&limit=25').subscribe(\n      response => {\n        console.log(response);\n        this.companyList = response['list']\n      }\n\n    )\n  }\n  educationList;\n\n  getEducation() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.educationLevel&includeKeys=&excludeKeys=&page=1&start=0&limit=25').subscribe(\n      response => {\n        console.log(response);\n        this.educationList = response['list']\n      }\n\n    )\n  }\n  dataCategory;\n\n  getcategory() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.category&includeKeys=&excludeKeys=&page=1&start=0&limit=25').subscribe(\n      response => {\n        console.log(response);\n        this.dataCategory = response['list']\n      }\n\n    )\n  }\n\n\n  typeList;\n  getType() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.type&includeKeys=&excludeKeys=&page=1&start=0&limit=25').subscribe(\n      response => {\n        console.log(response);\n        this.typeList = response['list']\n      }\n\n    )\n  }\n\n\n\n  sphereList;\n  getSphere() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.sphere&includeKeys=&excludeKeys=&page=1&start=0&limit=25').subscribe(\n      response => {\n        console.log(response);\n        this.sphereList = response['list']\n      }\n\n    )\n  }\n\n\n\n  //Programs\n  public getAllProgram() {\n    this.vacancyService.getAllPrograms(this.editData.id, this.page, 0, 25).subscribe(x => {\n      this.dataSource = new MatTableDataSource(this.dataSourceProgram = x['list']);\n      // console.log(x['list'])\n      console.log(this.dataSourceProgram)\n    }),\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n\n\n  }\n\n  selectedRowIndex = -1;\n  highlight(program) {\n    this.selectedRow = program;\n    this.selectedRowIndex = program.id;\n    console.log(program);\n\n\n\n  }\n  openDialogDeleteProgram(rowData) {\n    rowData = this.selectedRow\n    this.dialogRef.open(DeleteProgramFormComponent, {\n      data: this.selectedRow\n    }).afterClosed().subscribe(EditVacancyComponent => {\n      this.getAllProgram()\n    })\n  }\n  openDialog() {\n    this.dialogRef.open(NewProgramFormComponent, {\n      disableClose: true,\n      data: this.editData\n    }\n\n    ).afterClosed().subscribe(EditVacancyComponent => {\n      this.getAllProgram()\n    })\n\n  }\n\n  openEditProgram() {\n    this.dialogRef.open(EditProgramComponent, {\n      disableClose: true,\n      data: this.selectedRow\n\n    }).afterClosed().subscribe(EditVacancyComponent => {\n      this.getAllProgram()\n    })\n  }\n\n\n  //Language\n  public getAllLanguage() {\n    this.vacancyService.getAllLanguages(this.editData.id, 1, 0, 25).subscribe(x => {\n      this.dataSource = new MatTableDataSource(this.dataSourceLanguage = x['list']);\n      // console.log(x['list'])\n      console.log(this.dataSourceLanguage)\n    }),\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n\n\n  }\n\n  selectedRowIndexL = -1;\n  highlightL(language) {\n    this.selectedRowL = language;\n    this.selectedRowIndexL = language.id;\n    console.log(language);\n\n\n\n  }\n  openDialogDeleteLanguage(rowData) {\n    rowData = this.selectedRowL\n    this.dialogRef.open(DeleteLanguageFormComponent, {\n      data: this.selectedRowL\n    }).afterClosed().subscribe(EditVacancyComponent => {\n      this.getAllLanguage()\n    })\n  }\n  openDialogL() {\n    this.dialogRef.open(NewLanguageFormComponent, {\n      disableClose: true,\n      data: this.editData\n    }\n\n    ).afterClosed().subscribe(EditVacancyComponent => {\n      this.getAllLanguage()\n    })\n\n  }\n\n  openEditLanguage() {\n    this.dialogRef.open(EditLanguageComponent, {\n      disableClose: true,\n      data: this.selectedRowL\n\n    }).afterClosed().subscribe(EditVacancyComponent => {\n      this.getAllLanguage()\n    })\n  }\n  // skill\n  public getAllSkill() {\n    this.vacancyService.getAllSkills(this.editData.id, this.page, 0, 25).subscribe(x => {\n      this.dataSource = new MatTableDataSource(this.dataSourceSkill = x['list']);\n      // console.log(x['list'])\n      console.log(this.dataSourceSkill)\n    }),\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n\n\n  }\n\n  selectedRowIndexS = -1;\n  highlightS(skill) {\n    this.selectedRowS = skill;\n    this.selectedRowIndexS = skill.id;\n    console.log(skill);\n\n\n\n  }\n  openDialogDeleteSkill(rowData) {\n    rowData = this.selectedRowS\n    this.dialogRef.open(DeleteSkillFormComponent, {\n      data: this.selectedRowS\n    }).afterClosed().subscribe(EditVacancyComponent => {\n      this.getAllSkill()\n    })\n  }\n  openDialogS() {\n    this.dialogRef.open(NewSkillFormComponent, {\n      disableClose: true,\n      height: '500px',\n      width: '700px',\n      data: this.editData\n    }\n\n    ).afterClosed().subscribe(EditVacancyComponent => {\n      this.getAllSkill()\n    })\n\n  }\n\n  openEditSkill() {\n    this.dialogRef.open(EditSkillComponent, {\n      disableClose: true,\n      height: '500px',\n      width: '700px',\n      data: this.selectedRowS\n\n    }).afterClosed().subscribe(EditVacancyComponent => {\n      this.getAllSkill()\n    })\n  }\n\n\n  //applicants\n\n  public getAllApplicants() {\n    this.vacancyService.getAllApplicants(this.editData.id, 1, 0, 25).subscribe(x => {\n      this.dataSource = new MatTableDataSource(this.dataSourceApplicant = x['list']);\n      // console.log(x['list'])\n      console.log(this.dataSourceApplicant)\n    }),\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n\n\n  }\n  //highlight\n\n  selectedRowIndexApp = -1;\n  highlightApp(applicant) {\n    this.selectedRowApp = applicant;\n    this.selectedRowIndexApp = applicant.id;\n    console.log(applicant);\n  };\n\n  public openEdit() {\n\n\n    this.dialogRef.open(EditApplicantComponent, {\n      // disableClose: true,\n      height: '900px',\n      width: '1400px',\n      data: this.selectedRowApp\n\n    })\n  }\n\n  //shortList\n\n  public getAllShortListApplicants() {\n    this.vacancyService.getAllShortListApplicants(this.editData.id, this.page, 0, 25).subscribe(x => {\n      this.dataSource = new MatTableDataSource(this.dataSourceShortListApplicant = x['list']);\n      // console.log(x['list'])\n      console.log(this.dataSourceShortListApplicant)\n    }),\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n\n\n  }\n  //highlight\n\n  selectedRowIndexAppS = -1;\n  highlightAppS(applicantS) {\n    this.selectedRowAppS = applicantS;\n    this.selectedRowIndexAppS = applicantS.id;\n    console.log(applicantS);\n\n\n\n  }\n\n  printApplicant() {\n\n  }\n\n\n\n  public DownloadLink = environment.apiBaseUrl + '/VacancyAdmin/report/vacancy/applicantsReportLink?objectId=' + this.editData.id;\n\n  public ApplikantLink = 'http://jobs.energo-pro.ge/onlinejobs/#/Viewer/'\n\n\n\n  public moveToShortList(): void {\n\n    this.vacancyService.moveToShortList(this.selectedRowApp).subscribe((result) => {\n      console.log(result);\n      this.ngOnInit();\n    });\n\n\n\n\n  }\n\n  public removeFromShortList(): void {\n\n    this.vacancyService.removeFromShortList(this.selectedRowAppS).subscribe((result) => {\n      console.log(result);\n      this.ngOnInit();\n    });\n\n\n\n\n  }\n\n}\n\n// delete program\n@Component({\n  selector: 'vex-new-program-form',\n  templateUrl: './delete-program-form.component.html',\n  styleUrls: ['./edit-vacancy.component.css']\n})\nexport class DeleteProgramFormComponent implements OnInit {\n\n  vacancyProgramForm;\n  dataSource!: MatTableDataSource<any>;\n\n  dataSourceProgram: ProgramVacancy[]\n  editData: any;\n\n\n\n  constructor(private formBuilder: FormBuilder,\n    private vacancyService: VacancyService,\n    private dialogRef: MatDialogRef<DeleteProgramFormComponent>,\n    private applicantService: ApplicantService,\n    @Inject(MAT_DIALOG_DATA) public editDataP: any,) { }\n  ngOnInit() {\n    this.vacancyProgramForm = this.formBuilder.group({\n      // id: this.editData.id,\n      // programName: [''],\n      // comment: [''],\n      id: [],\n      objectId: [],\n      otherProgram: [''],\n      vacancyId: [],\n      programId: [''],\n      programName: [''],\n      vacancyName: []\n\n\n\n\n    })\n    // if (this.editData2) {\n    //   this.vacancyProgramForm.controls['programName'].setValue(this.editData2.programName);\n    // }\n  }\n\n\n  closeForm() {\n    this.dialogRef.close()\n\n  }\n\n  deleteProgram() {\n    this.vacancyService.deleteProgram(this.vacancyProgramForm.value, this.editDataP.id, this.editDataP.vacancyId).subscribe((result) => {\n      console.log(result);\n\n    })\n    this.dialogRef.close();\n  }\n}\n\n//delete language\n\n@Component({\n  selector: 'vex-new-language-form',\n  templateUrl: './delete-language-form.component.html',\n  styleUrls: ['./edit-vacancy.component.css']\n})\nexport class DeleteLanguageFormComponent implements OnInit {\n\n  vacancyLanguageForm;\n  dataSource!: MatTableDataSource<any>;\n\n  dataSourceLanguage: LanguageVacancy[]\n  editData: any;\n\n\n\n  constructor(private formBuilder: FormBuilder,\n    private vacancyService: VacancyService,\n    private dialogRef: MatDialogRef<DeleteLanguageFormComponent>,\n    @Inject(MAT_DIALOG_DATA) public editDataL: any,) { }\n  ngOnInit() {\n    this.vacancyLanguageForm = this.formBuilder.group({\n      // id: this.editData.id,\n      // programName: [''],\n\n      id: [],\n      objectId: [],\n      otherLanguage: [''],\n      vacancyId: [],\n      languageId: [''],\n      languageName: [''],\n\n\n\n    })\n    // if (this.editData2) {\n    //   this.vacancyLanguageForm.controls['LanguageName'].setValue(this.editData2.LanguageName);\n    // }\n  }\n\n\n  closeForm() {\n    this.dialogRef.close()\n\n  }\n\n  deleteLanguage() {\n    this.vacancyService.deleteLanguage(this.vacancyLanguageForm.value, this.editDataL.id, this.editDataL.vacancyId).subscribe((result) => {\n      console.log(result);\n\n    })\n    this.dialogRef.close();\n  }\n}\n\n//delete skill\n\n@Component({\n  selector: 'vex-new-skill-form',\n  templateUrl: './delete-skill-form.component.html',\n  styleUrls: ['./edit-vacancy.component.css']\n})\nexport class DeleteSkillFormComponent implements OnInit {\n\n\n  vacancySkillForm;\n  dataSource!: MatTableDataSource<any>;\n\n  dataSourceSkill: SkillVacancy[]\n  editData: any;\n\n\n\n  constructor(private formBuilder: FormBuilder,\n    private vacancyService: VacancyService,\n    private dialogRef: MatDialogRef<DeleteSkillFormComponent>,\n    @Inject(MAT_DIALOG_DATA) public editDataS: any,) { }\n  ngOnInit() {\n    this.vacancySkillForm = this.formBuilder.group({\n      // id: this.editData.id,\n      // programName: [''],\n\n      id: [],\n      objectId: [],\n      otherSkill: [''],\n      vacancyId: [],\n      skillId: [''],\n      skillName: [''],\n\n\n\n    })\n    // if (this.editData2) {\n    //   this.vacancySkillForm.controls['SkillName'].setValue(this.editData2.SkillName);\n    // }\n  }\n\n\n  closeForm() {\n    this.dialogRef.close()\n\n  }\n\n  deleteSkill() {\n    this.vacancyService.deleteSkill(this.vacancySkillForm.value, this.editDataS.id, this.editDataS.vacancyId).subscribe((result) => {\n      console.log(result);\n\n    })\n    this.dialogRef.close();\n  }\n}\n\n\nfunction moment(deadLine: any): any {\n  throw new Error('Function not implemented.');\n}\n\n","<h3 mat-dialog-title> Vacancy Editor </h3>\r\n<mat-tab-group>\r\n    <mat-tab label=\"Vacancy Information\">\r\n\r\n        <form [formGroup]=\"vacancyForm\" class=\"form-container\">\r\n            <mat-card>\r\n\r\n                <mat-card-content>\r\n\r\n                    <!-- about vacancy -->\r\n                    <div class=\" px-6 py-4 flex flex-col sm:flex-row sm:gap-2\">\r\n                        <span>Company</span>\r\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 14px;\" [style.width.%]=\"20\">\r\n                            <mat-select formControlName=\"companyId\">\r\n                                <mat-option *ngFor=\"let company of companyList\" [value]=\"company.id\">{{company.name}}\r\n                                </mat-option>\r\n\r\n                            </mat-select>\r\n                            <mat-error>This field is required</mat-error>\r\n                        </mat-form-field>\r\n                        <span> Vacancy Title* : </span>\r\n                        <mat-form-field appearance=\"outline\" class=\"flex-auto\" style=\"font-size: 14px;\">\r\n                            <input formControlName=\"vacancyName\" matInput required>\r\n                            <mat-error>This field is required</mat-error>\r\n                        </mat-form-field>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div class=\"flex flex-col sm:flex-row sm:gap-2\">\r\n                        <span> Address*: </span>\r\n                        <mat-form-field appearance=\"outline\" class=\"flex-auto\" style=\"font-size: 14px;\">\r\n                            <input formControlName=\"vacancyAddress\" matInput>\r\n                            <mat-error>This field is required</mat-error>\r\n                        </mat-form-field>\r\n\r\n                        <span> Dead Line*: </span>\r\n                        <mat-form-field appearance=\"outline\" class=\"smallBoxClass\" style=\"font-size: 14px;\">\r\n                            <input matInput [matDatepicker]=\"deadLine\" formControlName=\"deadLine\">\r\n                            <mat-hint>DD/MM/YYYY</mat-hint>\r\n                            <mat-datepicker-toggle [for]=\"deadLine\" matSuffix></mat-datepicker-toggle>\r\n                            <mat-datepicker #deadLine></mat-datepicker>\r\n                            <mat-error>This field is required</mat-error>\r\n                            <!-- <input matInput formControlName=\"deadLine\"> -->\r\n                        </mat-form-field>\r\n\r\n                        <span> Schedule *: </span>\r\n                        <mat-form-field appearance=\"outline\" class=\"smallBoxClass\" style=\"font-size: 14px;\">\r\n                            <input formControlName=\"schedule\" matInput required>\r\n                            <mat-error>This field is required</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <!-- categories (list in vacancy-form.component.ts) -->\r\n                    <div class=\"flex flex-col sm:flex-row sm:gap-4\">\r\n                        <span>Category</span>\r\n                        <mat-form-field appearance=\"outline\" class=\"flex-auto\" style=\"font-size: 14px;\">\r\n                            <!-- <mat-select formControlName=\"category\">\r\n                            <mat-option value=\"Hr\">ადამიანური რესურსების მართვა</mat-option>\r\n                            <mat-option value=\"Admin\">ადმინისტრაცია</mat-option>\r\n                            <mat-option value=\"Analytics\">ანალიტიკა</mat-option>\r\n                            <mat-option value=\"Audit\">აუდიტი</mat-option>\r\n                            <mat-option value=\"BusinessManager\">ბიზნესის მართვა</mat-option>\r\n                            <mat-option value=\"Billing\">ბილინგი</mat-option>\r\n                        </mat-select> -->\r\n                            <mat-select formControlName=\"categoryId\">\r\n                                <mat-option *ngFor=\"let category of dataCategory\"\r\n                                    [value]=\"category.id\">{{category.name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error>This field is required</mat-error>\r\n                        </mat-form-field>\r\n\r\n\r\n                        <span>Type</span>\r\n                        <mat-form-field appearance=\"outline\" class=\"flex-auto\" style=\"font-size: 14px;\">\r\n                            <mat-select formControlName=\"typeId\">\r\n                                <mat-option *ngFor=\"let type of typeList\" [value]=\"type.id\">{{type.name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error>This field is required</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div>\r\n                        <span> Description: </span>\r\n                        <mat-form-field appearance=\"outline\" [style.width.%]=\"90\" style=\"font-size: 14px;\">\r\n                            <textarea formControlName=\"description\" matInput cdkTextareaAutosize\r\n                                #autosize=\"cdkTextareaAutosize\" cdkAutosizeMinRows=\"3\"\r\n                                cdkAutosizeMaxRows=\"50\"> </textarea>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div>\r\n                        <span>Experience: </span>\r\n                        <mat-form-field appearance=\"outline\" [style.width.%]=\"90\" style=\"font-size: 14px;\">\r\n                            <textarea formControlName=\"experience\" matInput cdkTextareaAutosize\r\n                                #autosize=\"cdkTextareaAutosize\" cdkAutosizeMinRows=\"3\"\r\n                                cdkAutosizeMaxRows=\"50\"> </textarea>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"flex flex-col sm:flex-row sm:gap-5\">\r\n                        <span>Probationary Period: </span>\r\n                        <mat-form-field appearance=\"outline\" [style.width.%]=\"10\" style=\"font-size: 14px;\">\r\n                            <input formControlName=\"probationaryPeriod\" matInput>\r\n                        </mat-form-field>\r\n\r\n                        <span>Education Level*: </span>\r\n                        <mat-form-field appearance=\"outline\" [style.width.%]=\"40\" style=\"font-size: 14px;\">\r\n                            <mat-select formControlName=\"educationLevelId\">\r\n                                <mat-option *ngFor=\"let education of educationList\" [value]=\"education.id\">\r\n                                    {{education.name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"flex flex-col sm:flex-row sm:gap-2\">\r\n                        <span>Education Sphere*: </span>\r\n                        <mat-form-field appearance=\"outline\" style=\"font-size: 14px;\">\r\n                            <mat-select formControlName=\"experienceSphereId\">\r\n                                <mat-option *ngFor=\"let sphere of sphereList\"\r\n                                    [value]=\"sphere.id\">{{sphere.name}}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n                        <span> Education Sphere Comment: </span>\r\n                        <mat-form-field appearance=\"outline\" class=\"flex-auto\" style=\"font-size: 14px;\">\r\n                            <input formControlName=\"educationSphereComment\" matInput>\r\n                            <mat-error>This field is required</mat-error>\r\n                        </mat-form-field>\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <span>Salary: </span>\r\n                        <mat-form-field appearance=\"outline\" [style.width.%]=\"10\" style=\"font-size: 14px;\">\r\n                            <input formControlName=\"salary\" matInput>\r\n                        </mat-form-field>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </mat-card-content>\r\n\r\n\r\n                <button mat-button class=\"button-7 \" role=\"button\" (click)=\"updateFormData()\">Update</button>\r\n                <span>\r\n                    <button mat-button class=\"button-7 \" role=\"button\" (click)=\"closeForm()\">Close</button></span>\r\n\r\n\r\n\r\n            </mat-card>\r\n        </form>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Vacancy Language\">\r\n        <div class=\"buttonDisplay\">\r\n\r\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"refreshButton()\">\r\n                    <mat-icon>cached</mat-icon> Refresh\r\n                </button></span>\r\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"openDialogL()\">\r\n                    <mat-icon>assignment</mat-icon>\r\n                    New\r\n                </button></span>\r\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"openEditLanguage()\">\r\n                    <mat-icon>edit</mat-icon> Edit\r\n                </button></span>\r\n            <!-- <span> <button class=\"button-2\" role=\"button\">\r\n                        <mat-icon>remove_red_eye</mat-icon> View\r\n                    </button></span> -->\r\n\r\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"openDialogDeleteLanguage(editData)\">\r\n                    <mat-icon>delete_forever</mat-icon> Delete\r\n                </button></span>\r\n\r\n        </div>\r\n        <table mat-table [dataSource]=\"dataSourceLanguage\">\r\n            <ng-container matColumnDef=\"id\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    ID\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let languageData\">{{languageData?.id}} </td>\r\n\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"languages\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Language\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let languageData\">{{languageData?.languageName}} </td>\r\n\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"comment\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Comment\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let languageData\">{{languageData?.otherLanguage}} </td>\r\n\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let language; columns: displayedColumns;\"\r\n                [ngClass]=\"{'highlighted': selectedRowIndexL == language.id}\" (click)=\"highlightL(language)\"></tr>\r\n        </table>\r\n        <button class=\"button-7 displayEnd\" role=\"button\" (click)=\"closeForm()\">Close</button>\r\n\r\n    </mat-tab>\r\n    <mat-tab label=\"Vacancy Program\">\r\n        <div class=\"buttonDisplay\">\r\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"refreshButton()\">\r\n                    <mat-icon>cached</mat-icon> Refresh\r\n                </button></span>\r\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"openDialog()\">\r\n                    <mat-icon>assignment</mat-icon>\r\n                    New\r\n                </button></span>\r\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"openEditProgram()\">\r\n                    <mat-icon>edit</mat-icon> Edit\r\n                </button></span>\r\n            <!-- <span> <button class=\"button-2\" role=\"button\">\r\n                    <mat-icon>remove_red_eye</mat-icon> View\r\n                </button></span> -->\r\n\r\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"openDialogDeleteProgram(editData)\">\r\n                    <mat-icon>delete_forever</mat-icon> Delete\r\n                </button></span>\r\n\r\n        </div>\r\n        <table mat-table [dataSource]=\"dataSourceProgram\">\r\n            <ng-container matColumnDef=\"id\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    ID\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let programData\">{{programData?.id}} </td>\r\n\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"programs\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Program\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let programData\">{{programData?.programName}} </td>\r\n\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"comment\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Comment\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let programData\">{{programData?.otherProgram}} </td>\r\n\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"columnToDisplay\"></tr>\r\n            <tr mat-row *matRowDef=\"let program; columns: columnToDisplay;\"\r\n                [ngClass]=\"{'highlighted': selectedRowIndex == program.id}\" (click)=\"highlight(program)\"></tr>\r\n        </table>\r\n        <button class=\"button-7 displayEnd\" role=\"button\" (click)=\"closeForm()\">Close</button>\r\n\r\n        <!-- skill -->\r\n    </mat-tab>\r\n    <mat-tab label=\"Vacancy Skill\">\r\n        <div class=\"buttonDisplay\">\r\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"refreshButton()\">\r\n                    <mat-icon>cached</mat-icon> Refresh\r\n                </button></span>\r\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"openDialogS()\">\r\n                    <mat-icon>assignment</mat-icon>\r\n                    New\r\n                </button></span>\r\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"openEditSkill()\">\r\n                    <mat-icon>edit</mat-icon> Edit\r\n                </button></span>\r\n            <!-- <span> <button class=\"button-2\" role=\"button\">\r\n                    <mat-icon>remove_red_eye</mat-icon> View\r\n                </button></span> -->\r\n\r\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"openDialogDeleteSkill(editData)\">\r\n                    <mat-icon>delete_forever</mat-icon> Delete\r\n                </button></span>\r\n\r\n        </div>\r\n        <table mat-table [dataSource]=\"dataSourceSkill\">\r\n            <ng-container matColumnDef=\"id\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    ID\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let skillData\">{{skillData?.id}} </td>\r\n\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"skills\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Skill\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let skillData\">{{skillData?.skillName}} </td>\r\n\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"comment\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Comment\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let skillData\">{{skillData?.otherSkill}} </td>\r\n\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsSkill\"></tr>\r\n            <tr mat-row *matRowDef=\"let skill; columns: displayedColumnsSkill;\"\r\n                [ngClass]=\"{'highlighted': selectedRowIndexS == skill.id}\" (click)=\"highlightS(skill)\"></tr>\r\n        </table>\r\n        <button class=\"button-7 displayEnd\" role=\"button\" (click)=\"closeForm()\">Close</button>\r\n    </mat-tab>\r\n    <mat-tab label=\"Vacancy Applicants\">\r\n        <div class=\"buttonDisplay\">\r\n            <span> <a mat-button class=\"button-2\" role=\"button\" (click)=\"refreshButton()\">\r\n                    <mat-icon>cached</mat-icon> Refresh\r\n                </a></span>\r\n\r\n            <span> <a mat-button class=\"button-2\" role=\"button\" (click)=\"openEdit()\">\r\n                    <mat-icon>account_circle</mat-icon> Applicant Details\r\n                </a></span>\r\n            <span> <a mat-button class=\"button-2\" role=\"button\" (click)=\"moveToShortList()\">\r\n                    <mat-icon>favorite</mat-icon> Short List\r\n                </a></span>\r\n            <span> <a mat-button href=\"{{DownloadLink}}\" target=\"_blank\" class=\"button-2\" role=\"button\">\r\n                    <mat-icon>link</mat-icon>\r\n                    Generate Links\r\n                </a> </span>\r\n            <!-- <span> <a mat-button class=\"button-2\" role=\"button\">\r\n                    <mat-icon>delete_forever</mat-icon> Applicants Excel\r\n                </a></span> -->\r\n\r\n        </div>\r\n        <table mat-table [dataSource]=\"dataSourceApplicant\">\r\n            <ng-container matColumnDef=\"id\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    ID\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">{{applicant?.id}} </td>\r\n\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"firstName\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    First Name\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">{{applicant?.fname}} </td>\r\n\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"lastName\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Last Name\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">{{applicant?.lname}} </td>\r\n\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"personalNumber\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Personal Number\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">{{applicant?.customerNumber}} </td>\r\n\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"bDay\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Birth Day\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">{{applicant?.birthDate}} </td>\r\n\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"mail\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Mail\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">{{applicant?.mail}} </td>\r\n\r\n            </ng-container>\r\n\r\n            <!-- <ng-container matColumnDef=\"additionalMail\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Additional Mail\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">{{applicant?.optionalMail}} </td>\r\n\r\n            </ng-container> -->\r\n\r\n            <ng-container matColumnDef=\"mobile\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Mobile\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">{{applicant?.phone}} </td>\r\n\r\n            </ng-container>\r\n            <!-- \r\n            <ng-container matColumnDef=\"additionalPhone\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Additional Phone\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">{{applicant?.additionalphone}} </td>\r\n\r\n            </ng-container> -->\r\n            <ng-container matColumnDef=\"applyDate\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Apply Date\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">{{applicant?.applyDate}} </td>\r\n\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"link\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Applicants Link\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">\r\n                    <a href=\"{{ApplikantLink + applicant.randkey}}\" target=\"_blank\"><mat-icon>link</mat-icon> Profile\r\n                    </a>\r\n                </td>\r\n\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsApplicants\"></tr>\r\n            <tr mat-row *matRowDef=\"let applicant; columns: displayedColumnsApplicants;\"\r\n                [ngClass]=\"{'highlighted': selectedRowIndexApp == applicant.id}\" (click)=\"highlightApp(applicant)\"></tr>\r\n        </table>\r\n        <button class=\"button-7 displayEnd\" role=\"button\" (click)=\"closeForm()\">Close</button>\r\n    </mat-tab>\r\n\r\n    <!-- //short list -->\r\n    <mat-tab label=\"Short List\">\r\n        <div class=\"buttonDisplay\">\r\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"refreshButton()\">\r\n                    <mat-icon>cached</mat-icon> Refresh\r\n                </button></span>\r\n\r\n            <!-- <span> <button class=\"button-2\" role=\"button\">\r\n                    <mat-icon>edit</mat-icon> Edit Applicant\r\n                </button></span> -->\r\n\r\n\r\n            <span> <button class=\"button-2\" role=\"button\" (click)=\"removeFromShortList()\">\r\n                    <mat-icon>delete_forever</mat-icon> Remove\r\n                </button></span>\r\n\r\n        </div>\r\n        <table mat-table [dataSource]=\"dataSourceShortListApplicant\">\r\n            <ng-container matColumnDef=\"id\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    ID\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">{{applicant?.id}} </td>\r\n\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"firstName\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    First Name\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">{{applicant?.fname}} </td>\r\n\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"lastName\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Last Name\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">{{applicant?.lname}} </td>\r\n\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"personalNumber\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Personal Number\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">{{applicant?.customerNumber}} </td>\r\n\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"bDay\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Birth Day\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">{{applicant?.birthDate}} </td>\r\n\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"mail\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Mail\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">{{applicant?.mail}} </td>\r\n\r\n            </ng-container>\r\n\r\n            <!-- <ng-container matColumnDef=\"additionalMail\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Additional Mail\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">{{applicant?.optionalMail}} </td>\r\n\r\n            </ng-container> -->\r\n\r\n            <ng-container matColumnDef=\"mobile\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Mobile\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">{{applicant?.phone}} </td>\r\n\r\n            </ng-container>\r\n            <!-- \r\n            <ng-container matColumnDef=\"additionalPhone\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Additional Phone\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">{{applicant?.additionalphone}} </td>\r\n\r\n            </ng-container> -->\r\n            <ng-container matColumnDef=\"applyDate\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Apply Date\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">{{applicant?.applyDate}} </td>\r\n\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"link\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"body\">\r\n                    Applicants Link\r\n                </th>\r\n                <td mat-cell *matCellDef=\" let applicant\">\r\n                    <a href=\"{{ApplikantLink + applicant.randkey}}\" target=\"_blank\"><mat-icon>link</mat-icon> Profile\r\n                    </a>\r\n                </td>\r\n\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsShortList\"></tr>\r\n            <tr mat-row *matRowDef=\"let applicantS; columns: displayedColumnsShortList;\"\r\n                [ngClass]=\"{'highlighted': selectedRowIndexAppS == applicantS.id}\" (click)=\"highlightAppS(applicantS)\">\r\n            </tr>\r\n        </table>\r\n        <button class=\"button-7 displayEnd\" role=\"button\" (click)=\"closeForm()\">Close</button>\r\n    </mat-tab>","<h3>Vacancy Program</h3>\r\n\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <div> Do you want to delete program?</div>\r\n    </mat-card-content>\r\n    <mat-card-actions class=\"flex flex-col sm:flex-row sm:gap-4 margin\">\r\n        <button mat-button class=\"button-7\" role=\"button\" (click)=\"deleteProgram()\">Delete</button>\r\n\r\n\r\n        <button class=\"button-7 \" role=\"button\" (click)=\"closeForm()\">Cancel</button>\r\n\r\n\r\n    </mat-card-actions>\r\n</mat-card>","<h3>Vacancy Language</h3>\r\n\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <div> Do you want to delete Language?</div>\r\n    </mat-card-content>\r\n    <mat-card-actions class=\"flex flex-col sm:flex-row sm:gap-4 margin\">\r\n        <button mat-button class=\"button-7\" role=\"button\" (click)=\"deleteLanguage()\">Delete</button>\r\n\r\n\r\n        <button class=\"button-7 \" role=\"button\" (click)=\"closeForm()\">Cancel</button>\r\n\r\n\r\n    </mat-card-actions>\r\n</mat-card>","<h3>Vacancy Skill</h3>\r\n\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <div> Do you want to delete Skill?</div>\r\n    </mat-card-content>\r\n    <mat-card-actions class=\"flex flex-col sm:flex-row sm:gap-4 margin\">\r\n        <button mat-button class=\"button-7\" role=\"button\" (click)=\"deleteSkill()\">Delete</button>\r\n\r\n\r\n        <button class=\"button-7 \" role=\"button\" (click)=\"closeForm()\">Cancel</button>\r\n\r\n\r\n    </mat-card-actions>\r\n</mat-card>","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ProgramVacancy } from 'src/app/pages/model/vacancy-program-model';\nimport { VacancyService } from 'src/app/services/vacancy.service';\nimport { environment } from 'src/environments/environment';\nimport { NewProgramFormComponent } from '../../new-program-form/new-program-form.component';\n\n@Component({\n  selector: 'vex-edit-language',\n  templateUrl: './edit-language.component.html',\n  styleUrls: ['./edit-language.component.scss']\n})\nexport class EditLanguageComponent implements OnInit {\n\n  [x: string]: any;\n  vacancyLanguageForm;\n  dataSource!: MatTableDataSource<any>;\n\n  dataSourceProgram: ProgramVacancy[]\n\n\n  constructor(private formBuilder: FormBuilder,\n    private vacancyService: VacancyService,\n    private dialogRef: MatDialogRef<NewProgramFormComponent>,\n    private httpClient: HttpClient,\n    @Inject(MAT_DIALOG_DATA) public editData: any,) { }\n\n  ngOnInit(): void {\n    this.vacancyLanguageForm = this.formBuilder.group({\n      // id: this.editData.id,\n      // programName: [''],\n\n      id: this.editData.id,\n      objectId: this.editData.objectId,\n      otherLanguage: [''],\n      vacancyId: this.editData.vacancyId,\n      languageId: [''],\n      languageName: [''],\n\n\n\n\n\n    })\n    if (this.editData) {\n      this.vacancyLanguageForm.controls['id'].setValue(this.editData.id);\n      this.vacancyLanguageForm.controls['objectId'].setValue(this.editData.objectId);\n      this.vacancyLanguageForm.controls['vacancyId'].setValue(this.editData.vacancyId)\n      this.vacancyLanguageForm.controls['otherLanguage'].setValue(this.editData.otherLanguage);\n      this.vacancyLanguageForm.controls['languageName'].setValue(this.editData.languageName);\n      this.vacancyLanguageForm.controls['languageId'].setValue(this.editData.languageId)\n\n    }\n    this.getLanguage();\n  }\n\n\n  LanguageList;\n\n  getLanguage() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.language&includeKeys=&excludeKeys=&page=1&start=0&limit=25').subscribe(\n      response => {\n        console.log(response);\n        this.LanguageList = response['list']\n      }\n\n    )\n  }\n\n  saveFormData() {\n    console.log(this.vacancyLanguageForm.value);\n    this.vacancyService.updateLanguage(this.editData.objectId, this.editData.vacancyId, this.vacancyLanguageForm.value).subscribe((result) => {\n      console.log(result)\n    })\n    this.dialogRef.close();\n\n\n\n\n  }\n  closeForm() {\n    this.dialogRef.close()\n  }\n\n\n}\n","<h3>Vacancy Language</h3>\n\n<form [formGroup]=\"vacancyLanguageForm\" class=\"form-container\">\n    <mat-card>\n        <mat-card-content>\n            <div class=\" px-6 py-4 flex flex-col\">\n\n                <div>Language</div>\n                <mat-form-field appearance=\"outline\" style=\"font-size: 12px;\">\n                    <mat-select formControlName=\"languageId\">\n                        <mat-option *ngFor=\"let Language of LanguageList\" [value]=\"Language.id\">{{Language.name}}\n                        </mat-option>\n\n                    </mat-select>\n\n\n                </mat-form-field>\n\n\n                <div> Comment : </div>\n                <mat-form-field appearance=\"outline\" style=\"font-size: 12px;\">\n                    <input formControlName=\"otherLanguage\" matInput>\n\n                </mat-form-field>\n\n            </div>\n        </mat-card-content>\n\n        <mat-card-actions class=\"flex flex-col sm:flex-row sm:gap-4 margin\">\n            <button mat-button class=\"button-7\" role=\"button\" (click)=\"saveFormData()\">Save</button>\n\n\n            <button mat-button class=\"button-7 \" role=\"button\" (click)=\"closeForm()\">Cancel</button>\n\n\n        </mat-card-actions>\n    </mat-card>\n</form>","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { LanguageVacancy } from 'src/app/pages/model/vacancy-language-model';\nimport { VacancyService } from 'src/app/services/vacancy.service';\nimport { environment } from 'src/environments/environment';\n\n\n@Component({\n  selector: 'vex-new-language-form',\n  templateUrl: './new-language-form.component.html',\n  styleUrls: ['./new-language-form.component.scss']\n})\nexport class NewLanguageFormComponent implements OnInit {\n  [x: string]: any;\n  vacancyLanguageForm;\n  dataSource!: MatTableDataSource<any>;\n\n  dataSourceLanguage: LanguageVacancy[]\n\n\n\n  constructor(private formBuilder: FormBuilder,\n    private vacancyService: VacancyService,\n    private dialogRef: MatDialogRef<NewLanguageFormComponent>,\n    private httpClient: HttpClient,\n    @Inject(MAT_DIALOG_DATA) public editData: any,) { }\n\n  ngOnInit(): void {\n    this.vacancyLanguageForm = this.formBuilder.group({\n      // id: this.editData.id,\n      // LanguageName: [''],\n      // comment: [''],\n      id: [],\n      objectId: [],\n      otherLanguage: [''],\n      vacancyId: this.editData.id,\n      languageId: [],\n      languageName: [],\n      vacancyName: this.editData.vacancyName,\n\n\n\n\n    })\n    this.getLanguage();\n\n  }\n\n\n  LanguageList;\n  getLanguage() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.language&includeKeys=&excludeKeys=&page=1&start=0&limit=25').subscribe(\n      response => {\n        console.log(response);\n        this.LanguageList = response['list']\n      }\n\n    )\n  }\n  saveFormData() {\n    console.log(this.vacancyLanguageForm.value);\n    this.vacancyService.addNewLanguage(this.editData.id, this.vacancyLanguageForm.value).subscribe((result) => {\n      console.log(result)\n    })\n    this.dialogRef.close();\n\n\n\n\n  }\n  closeForm() {\n    this.dialogRef.close()\n  }\n\n\n\n\n}\n\n\n\n","<h3>Vacancy Language</h3>\n\n<form [formGroup]=\"vacancyLanguageForm\" class=\"form-container\">\n    <mat-card>\n        <mat-card-content>\n            <div class=\" px-6 py-4 flex flex-col\">\n\n                <div>Language</div>\n                <mat-form-field appearance=\"outline\" style=\"font-size: 12px;\">\n                    <mat-select formControlName=\"languageId\">\n                        <mat-option *ngFor=\"let Language of LanguageList\" [value]=\"Language.id\">{{Language.name}}\n                        </mat-option>\n\n                    </mat-select>\n\n\n                </mat-form-field>\n\n\n                <div> Comment : </div>\n                <mat-form-field appearance=\"outline\" style=\"font-size: 12px;\">\n                    <input formControlName=\"otherLanguage\" matInput>\n\n                </mat-form-field>\n\n            </div>\n        </mat-card-content>\n\n        <mat-card-actions class=\"flex flex-col sm:flex-row sm:gap-4 margin\">\n            <button mat-button class=\"button-7\" role=\"button\" (click)=\"saveFormData()\">Save</button>\n\n\n            <button mat-button class=\"button-7 \" role=\"button\" (click)=\"closeForm()\">Cancel</button>\n\n\n        </mat-card-actions>\n    </mat-card>\n</form>","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Program, ProgramVacancy } from 'src/app/pages/model/vacancy-program-model';\nimport { VacancyService } from 'src/app/services/vacancy.service';\nimport { environment } from 'src/environments/environment';\n\nimport { NewProgramFormComponent } from '../new-program-form.component';\n\n@Component({\n  selector: 'vex-edit-program',\n  templateUrl: './edit-program.component.html',\n  styleUrls: ['./edit-program.component.scss']\n})\nexport class EditProgramComponent implements OnInit {\n  [x: string]: any;\n  vacancyProgramForm;\n  dataSource!: MatTableDataSource<any>;\n\n  dataSourceProgram: ProgramVacancy[]\n  data: Program['vacancyId'];\n  dataName: Program['vacancyName']\n\n\n  constructor(private formBuilder: FormBuilder,\n    private vacancyService: VacancyService,\n    private dialogRef: MatDialogRef<NewProgramFormComponent>,\n    private httpClient: HttpClient,\n    @Inject(MAT_DIALOG_DATA) public editData: any,) { }\n\n  ngOnInit(): void {\n    this.vacancyProgramForm = this.formBuilder.group({\n      // id: this.editData.id,\n      // programName: [''],\n\n      id: this.editData.id,\n      objectId: this.editData.objectId,\n      otherProgram: [''],\n      vacancyId: this.editData.vacancyId,\n      programId: [''],\n      programName: [''],\n\n\n\n\n\n    })\n    if (this.editData) {\n      this.vacancyProgramForm.controls['id'].setValue(this.editData.id);\n      this.vacancyProgramForm.controls['objectId'].setValue(this.editData.objectId);\n      this.vacancyProgramForm.controls['vacancyId'].setValue(this.editData.vacancyId)\n      this.vacancyProgramForm.controls['otherProgram'].setValue(this.editData.otherProgram);\n      this.vacancyProgramForm.controls['programName'].setValue(this.editData.programName);\n      this.vacancyProgramForm.controls['programId'].setValue(this.editData.programId)\n\n    }\n    this.getProgram();\n  }\n\n\n  programList;\n  getProgram() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.program&includeKeys=&excludeKeys=&page=1&start=0&limit=25').subscribe(\n      response => {\n        console.log(response);\n        this.programList = response['list']\n      }\n\n    )\n  }\n  saveFormData() {\n    console.log(this.vacancyProgramForm.value);\n    this.vacancyService.updateProgram(this.editData.objectId, this.editData.vacancyId, this.vacancyProgramForm.value).subscribe((result) => {\n      console.log(result)\n    })\n    this.dialogRef.close();\n\n\n\n\n  }\n  closeForm() {\n    this.dialogRef.close()\n  }\n\n\n\n}\n","<h3>Vacancy Program</h3>\n\n<form [formGroup]=\"vacancyProgramForm\" class=\"form-container\">\n    <mat-card>\n        <mat-card-content>\n            <div class=\" px-6 py-4 flex flex-col\">\n\n                <div>Program</div>\n                <mat-form-field appearance=\"outline\" style=\"font-size: 12px;\">\n                    <mat-select formControlName=\"programId\">\n                        <mat-option *ngFor=\"let program of programList\" [value]=\"program.id\">{{program.name}}\n                        </mat-option>\n\n                    </mat-select>\n\n\n                </mat-form-field>\n\n\n                <div> Comment : </div>\n                <mat-form-field appearance=\"outline\" style=\"font-size: 12px;\">\n                    <input formControlName=\"otherProgram\" matInput>\n\n                </mat-form-field>\n\n            </div>\n        </mat-card-content>\n        <mat-card-actions class=\"flex flex-col sm:flex-row sm:gap-4 margin\">\n            <button mat-button class=\"button-7\" role=\"button\" (click)=\"saveFormData()\">Edit</button>\n\n\n            <button mat-button class=\"button-7 \" role=\"button\" (click)=\"closeForm()\">Cancel</button>\n\n\n        </mat-card-actions>\n    </mat-card>\n</form>","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { event } from 'jquery';\nimport { ProgramVacancy, Program } from 'src/app/pages/model/vacancy-program-model';\nimport { VacancyService } from 'src/app/services/vacancy.service';\nimport { environment } from 'src/environments/environment';\nimport { threadId } from 'worker_threads';\n\nimport { EditVacancyComponent } from '../edit-vacancy.component';\n\n\n@Component({\n  selector: 'vex-new-program-form',\n  templateUrl: './new-program-form.component.html',\n  styleUrls: ['./new-program-form.component.scss']\n})\nexport class NewProgramFormComponent implements OnInit {\n  [x: string]: any;\n  vacancyProgramForm;\n  dataSource!: MatTableDataSource<any>;\n\n  dataSourceProgram: ProgramVacancy[]\n  data: Program['vacancyId'];\n  dataName: Program['vacancyName']\n\n\n  constructor(private formBuilder: FormBuilder,\n    private vacancyService: VacancyService,\n    private dialogRef: MatDialogRef<NewProgramFormComponent>,\n    private httpClient: HttpClient,\n    @Inject(MAT_DIALOG_DATA) public editData: any,) { }\n\n  ngOnInit(): void {\n    this.vacancyProgramForm = this.formBuilder.group({\n      // id: this.editData.id,\n      // programName: [''],\n      // comment: [''],\n      id: [],\n      objectId: [],\n      otherProgram: [''],\n      vacancyId: this.editData.id,\n      programId: [],\n      programName: [],\n      vacancyName: this.editData.vacancyName,\n\n\n\n\n    })\n    this.getProgram();\n  }\n\n\n  programList;\n  getProgram() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.program&includeKeys=&excludeKeys=&page=1&start=0&limit=25').subscribe(\n      response => {\n        console.log(response);\n        this.programList = response['list']\n      }\n\n    )\n  }\n\n  saveFormData() {\n    console.log(this.vacancyProgramForm.value);\n    this.vacancyService.addNewProgram(this.editData.id, this.vacancyProgramForm.value).subscribe((result) => {\n      console.log(result)\n    })\n    this.dialogRef.close();\n\n\n\n\n  }\n  closeForm() {\n    this.dialogRef.close()\n  }\n\n\n\n\n}\n\n\n","<h3>Vacancy Program</h3>\n\n<form [formGroup]=\"vacancyProgramForm\" class=\"form-container\">\n    <mat-card>\n        <mat-card-content>\n            <div class=\" px-6 py-4 flex flex-col\">\n\n                <div>Program</div>\n                <mat-form-field appearance=\"outline\" style=\"font-size: 12px;\">\n                    <mat-select formControlName=\"programId\">\n                        <mat-option *ngFor=\"let program of programList\" [value]=\"program.id\">{{program.name}}\n                        </mat-option>\n\n                    </mat-select>\n\n\n                </mat-form-field>\n\n\n                <div> Comment : </div>\n                <mat-form-field appearance=\"outline\" style=\"font-size: 12px;\">\n                    <input formControlName=\"otherProgram\" matInput>\n\n                </mat-form-field>\n\n            </div>\n        </mat-card-content>\n\n        <mat-card-actions class=\"flex flex-col sm:flex-row sm:gap-4 margin\">\n            <button mat-button class=\"button-7\" role=\"button\" (click)=\"saveFormData()\">Save</button>\n\n\n            <button mat-button class=\"button-7 \" role=\"button\" (click)=\"closeForm()\">Cancel</button>\n\n\n        </mat-card-actions>\n    </mat-card>\n</form>","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { SkillVacancy } from 'src/app/pages/model/vacancy-skill-model';\nimport { VacancyService } from 'src/app/services/vacancy.service';\nimport { environment } from 'src/environments/environment';\n\nimport { NewSkillFormComponent } from '../new-skill-form.component';\n\n\n@Component({\n  selector: 'vex-edit-skill',\n  templateUrl: './edit-skill.component.html',\n  styleUrls: ['./edit-skill.component.scss']\n})\nexport class EditSkillComponent implements OnInit {\n\n  [x: string]: any;\n  vacancySkillForm;\n  dataSource!: MatTableDataSource<any>;\n\n  dataSourceSkill: SkillVacancy[]\n\n\n\n  constructor(private formBuilder: FormBuilder,\n    private vacancyService: VacancyService,\n    private dialogRef: MatDialogRef<NewSkillFormComponent>,\n    private httpClient: HttpClient,\n    @Inject(MAT_DIALOG_DATA) public editData: any,) { }\n\n  ngOnInit(): void {\n    this.vacancySkillForm = this.formBuilder.group({\n      // id: this.editData.id,\n      // SkillName: [''],\n\n      id: this.editData.id,\n      objectId: this.editData.objectId,\n      otherSkill: [''],\n      vacancyId: this.editData.vacancyId,\n      skillId: [''],\n      skillName: [''],\n\n\n\n\n\n    })\n    if (this.editData) {\n      this.vacancySkillForm.controls['id'].setValue(this.editData.id);\n      this.vacancySkillForm.controls['objectId'].setValue(this.editData.objectId);\n      this.vacancySkillForm.controls['vacancyId'].setValue(this.editData.vacancyId)\n      this.vacancySkillForm.controls['otherSkill'].setValue(this.editData.otherSkill);\n      this.vacancySkillForm.controls['skillName'].setValue(this.editData.skillName);\n      this.vacancySkillForm.controls['skillId'].setValue(this.editData.skillId)\n\n    }\n\n    this.getSkill();\n  }\n\n\n  skillList;\n  getSkill() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.skill&includeKeys=&excludeKeys=&page=1&start=0&limit=25').subscribe(\n      response => {\n        console.log(response);\n        this.skillList = response['list']\n      }\n\n    )\n  }\n\n  saveFormData() {\n    console.log(this.vacancySkillForm.value);\n    this.vacancyService.updateSkill(this.editData.objectId, this.editData.vacancyId, this.vacancySkillForm.value).subscribe((result) => {\n      console.log(result)\n    })\n    this.dialogRef.close();\n\n\n\n\n  }\n  closeForm() {\n    this.dialogRef.close()\n  }\n\n\n}\n","<h3>Vacancy Skill</h3>\n\n<form [formGroup]=\"vacancySkillForm\" class=\"form-container\">\n    <mat-card>\n        <mat-card-content>\n            <div class=\" px-6 py-4 flex flex-col\">\n\n                <div>Skill</div>\n                <mat-form-field appearance=\"outline\" style=\"font-size: 12px;\">\n                    <mat-select formControlName=\"skillId\">\n                        <mat-option *ngFor=\"let skill of skillList\" [value]=\"skill.id\">{{skill.name}}\n                        </mat-option>\n\n                    </mat-select>\n\n\n                </mat-form-field>\n\n\n                <div> Comment : </div>\n                <mat-form-field appearance=\"outline\" style=\"font-size: 12px;\">\n                    <input formControlName=\"otherSkill\" matInput>\n\n                </mat-form-field>\n\n            </div>\n        </mat-card-content>\n\n        <mat-card-actions class=\"flex flex-col sm:flex-row sm:gap-4 margin\">\n            <button mat-button class=\"button-7\" role=\"button\" (click)=\"saveFormData()\">Save</button>\n\n\n            <button mat-button class=\"button-7 \" role=\"button\" (click)=\"closeForm()\">Cancel</button>\n\n\n        </mat-card-actions>\n    </mat-card>\n</form>","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ApplicantSkill } from 'src/app/pages/model/applicantDetail';\nimport { SkillVacancy } from 'src/app/pages/model/vacancy-skill-model';\nimport { VacancyService } from 'src/app/services/vacancy.service';\nimport { environment } from 'src/environments/environment';\n\n\n\n\n@Component({\n  selector: 'vex-new-skill-form',\n  templateUrl: './new-skill-form.component.html',\n  styleUrls: ['./new-skill-form.component.scss']\n})\nexport class NewSkillFormComponent implements OnInit {\n  [x: string]: any;\n  vacancySkillForm;\n  dataSource!: MatTableDataSource<any>;\n\n  dataSourceSkill: SkillVacancy[]\n\n\n  constructor(private formBuilder: FormBuilder,\n    private vacancyService: VacancyService,\n    private dialogRef: MatDialogRef<NewSkillFormComponent>,\n    private httpClient: HttpClient,\n    @Inject(MAT_DIALOG_DATA) public editData: any,) { }\n\n  ngOnInit(): void {\n    this.vacancySkillForm = this.formBuilder.group({\n      // id: this.editData.id,\n      // skillName: [''],\n      // comment: [''],\n      id: [],\n      objectId: [],\n      otherSkill: [''],\n      vacancyId: this.editData.id,\n      skillId: [],\n      programName: [],\n      vacancyName: this.editData.vacancyName,\n      levelId: [],\n\n\n\n\n    })\n    this.getSkill();\n\n  }\n\n\n\n  skillList;\n\n  getSkill() {\n    this.httpClient.get<any>(environment.apiBaseUrl + '/VacancyAdmin/di/items/getitems?key=key.skill&includeKeys=&excludeKeys=&page=1&start=0&limit=25').subscribe(\n      response => {\n        console.log(response);\n        this.skillList = response['list']\n      }\n\n    )\n  }\n  saveFormData() {\n    console.log(this.vacancySkillForm.value);\n    this.vacancyService.addNewSkill(this.editData.id, this.vacancySkillForm.value).subscribe((result) => {\n      console.log(result)\n    })\n    this.dialogRef.close();\n\n\n\n\n  }\n  closeForm() {\n    this.dialogRef.close()\n  }\n\n\n\n\n}\n\n\n\n\n","<h3>Vacancy Skill</h3>\n\n<form [formGroup]=\"vacancySkillForm\" class=\"form-container\">\n    <mat-card>\n        <mat-card-content>\n            <div class=\" px-6 py-4 flex flex-col\">\n\n                <div>Skill</div>\n                <mat-form-field appearance=\"outline\" style=\"font-size: 12px;\">\n                    <mat-select formControlName=\"skillId\">\n                        <mat-option *ngFor=\"let skill of skillList\" [value]=\"skill.id\">{{skill.name}}\n                        </mat-option>\n\n                    </mat-select>\n\n\n                </mat-form-field>\n\n\n                <div> Comment : </div>\n                <mat-form-field appearance=\"outline\" style=\"font-size: 12px;\">\n                    <input formControlName=\"otherSkill\" matInput>\n\n                </mat-form-field>\n\n            </div>\n        </mat-card-content>\n\n        <mat-card-actions class=\"flex flex-col sm:flex-row sm:gap-4 margin\">\n            <button mat-button class=\"button-7\" role=\"button\" (click)=\"saveFormData()\">Save</button>\n\n\n            <button mat-button class=\"button-7 \" role=\"button\" (click)=\"closeForm()\">Cancel</button>\n\n\n        </mat-card-actions>\n    </mat-card>\n</form>"],"names":[],"sourceRoot":"webpack:///"}